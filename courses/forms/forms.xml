<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="funct.css" type="text/css"?>
<?xm-well_formed path="funct.dtd"?>
<slides>
 <lang>en</lang>
  <title>Forms: Labeling, Instructions and Error Feedback</title>
  <name>Jon Gunderson, Ph.D.</name>
  <desc href="http://disability.illinois.edu">Division of Disability Resources and Educational Services</desc>
  <desc href="http://ahs.illinois.edu">College of Applied Health Sciences</desc>
  <desc href="http://illinois.edu">University of Illinois at Urbana-Champaign</desc>
  <email>jongund@illinois.edu</email>
  <home>../badges-links-forms.html</home>

  <stylesheet media="screen">../../common/css/bootstrap.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-theme.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-accessibility.css</stylesheet>
  <stylesheet media="screen">../../common/css/xml-slides.css</stylesheet>
  <stylesheet media="screen">../../common/css/highlight.css</stylesheet>
  <script>../../common/js/jquery-2.1.1.min.js</script>
  <script>../../common/js/bootstrap.min.js</script>
  <script>../../common/js/bootstrap-accessibility.min.js</script>
  <script>../../common/js/highlight.pack.js</script>
  <script>../../common/js/xml-slides.js</script>


  <slide>
    <title>Forms Overview</title>
    <contents>
      <ul>
        <li>Labeling</li>
        <li>Instructions</li>
        <li>Focus styling</li>
        <li>Error Feedback</li>
        <li>Prevent Errors (Legal and Financial transactions)</li>
      </ul>
      <script type="text/javascript">
        slideShowURL()
      </script>
    </contents>
  </slide>

  <slide>
    <title>WCAG 2.0 Requirements for Forms and Form Controls (Level A and AA)</title>
    <style>
      dt { font-weight: bold; padding-top: 1em;}
    </style>
    <contents>
      <dl>
        <dt><a href="http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive"        target="_spec">2.4.6 Headings and Labels</a></dt>
        <dd>Headings and labels describe topic or purpose. (Level AA) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#consistent-behavior-receive-focus"        target="_spec">3.2.1 On Focus</a></dt>
        <dd>When any component receives focus, it does not initiate a change of context. (Level A) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#consistent-behavior-unpredictable-change" target="_spec">3.2.2 On Input</a></dt>
        <dd>Changing the setting of any user interface component does not automatically cause a change of context unless the user has been advised of the behavior before using the component. (Level A) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#minimize-error-identified"                target="_spec">3.3.1 Error Identification</a></dt>
        <dd>If an input error is automatically detected, the item that is in error is identified and the error is described to the user in text. (Level A) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#minimize-error-cues"                      target="_spec">3.3.2 Labels or Instructions</a></dt>
        <dd> Labels or instructions are provided when content requires user input. (Level A) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#minimize-error-suggestions"               target="_spec">3.3.3 Error Suggestion</a></dt>
        <dd>If an input error is automatically detected and suggestions for correction are known, then the suggestions are provided to the user, unless it would jeopardize the security or purpose of the content. (Level AA) </dd>

        <dt><a href="http://www.w3.org/TR/WCAG20/#minimize-error-reversible"                     target="_spec">3.3.4 Error Prevention (Legal, Financial, Data)</a></dt>
        <dd>For Web pages that cause legal commitments or financial transactions for the user to occur, that modify or delete user-controllable data in data storage systems, or that submit user test responses, at least one of the following is true: (Level AA)
          <ul>
            <li>Reversible: Submissions are reversible</li>
            <li>Checked: Data entered by the user is checked for input errors and the user is provided an opportunity to correct them.</li>
            <li>Confirmed: A mechanism is available for reviewing, confirming, and correcting information before finalizing the submission.</li>
          </ul>
        </dd>
      </dl>
    </contents>
  </slide>

  <slide>
    <title>ARIA and HTML5 form controls</title>
    <contents>
      <h2>Labeling form controls</h2>
      <ul>
        <li><code>label</code> element (HTML4/HTML5)</li>
        <li><code>title</code> attribute (HTML4/HMTL5)</li>
        <li><code>fieldset/legend</code> elements (HTML4/HTML5)</li>
        <li><code>aria-labelledby</code> attribute (ARIA 1.0)</li>
        <li><code>aria-label</code> attribute (ARIA 1.0)</li>
      </ul>

      <h2>Instructions</h2>
      <ul>
        <li><code>tabindex="0"</code> attribute to add instructions to tab order (convention)</li>
        <li><code>title</code> attribute (HTML5)</li>
        <li><code>aria-describedby</code> attribute (ARIA 1.0)</li>
      </ul>

      <h2>Identifying Required and Invalid Form Controls</h2>
      <ul>
        <li>Image with ALT Text</li>
        <li>Text content (hidden or visible)</li>
        <li><code>aria-required</code> attribute (ARIA 1.0)</li>
        <li><code>aria-invalid</code> attribute (ARIA 1.0)</li>
        <li><code>required</code> attribute (HTML 5)</li>
        <li><code>alert</code> role for announcing errors</li>
      </ul>

    </contents>
  </slide>

  <slide>
    <title>Important Concepts: Role and Accessible Name</title>
    <contents>
      <table class="table table-striped table-hover" aria-labelledby="h1_title">
        <thead>
          <tr>
            <th>Concept</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Role</th>
            <td>Describes what the function of an element is in the document and what types of interaction is expected, examples include:
               <ul>
                 <li>link</li>
                 <li>textbox</li>
                 <li>checkbox</li>
                 <li>radio button</li>
               </ul>
            </td>
          </tr>
          <tr>
            <th>Accessible Name</th>
            <td>Describes the purpose of this specific form control in the form and is computed based on author supplied information.
              Examples of sources of accessible names include:
              <ul>
                <li>Child text nodes of <code>label</code> element (preferred)</li>
                <li><code>aria-label</code> attribute</li>
                <li><code>aria-labelledby</code> attribute</li>
                <li><code>title</code> attribute</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>Advantages of using Label Element</title>
    <contents>
      <ul>
        <li>Larger target area for form controls.</li>
        <li>Clicking on label moves focus to text input boxes or toggles the state of radio buttons and checkboxes.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Basic Screen Reader Commands related to Forms</title>
    <contents>
      <table class="table table-striped table-hover" aria-labelledby="h1_title">
        <thead>
          <tr>
            <th>Action</th>
            <th>JAWS (Windows)</th>
            <th>NVDA (Windows)</th>
            <th>Voice Over (OS X)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Next control</td>
            <td>Tab</td>
            <td>Tab</td>
            <td>Tab</td>
          </tr>
          <tr>
            <td>Previous control</td>
            <td>Shift+Tab</td>
            <td>Shift+Tab</td>
            <td>Shift+Tab</td>
          </tr>
          <tr>
            <td>Re-read current control</td>
            <td>Insert+Numpad 5</td>
            <td>NVDA+Numpad 5 or NVDA+Shift+O</td>
            <td>Command+Option+Space</td>
          </tr>
          <tr>
            <td>More information on control</td>
            <td>Insert+SHIFT+F1 and Insert+Control+Shift+F1</td>
            <td>NVDA+D</td>
            <td>Control+Option+F4</td>
          </tr>
          <tr>
            <td>List of Form Controls</td>
            <td>Insert+F5</td>
            <td>NVDA+F7</td>
            <td>Command+Option+U, then left/right arrow to forms</td>
          </tr>
          <tr>
            <td>Detailed Keyboard Information</td>
            <td><a href="http://doccenter.freedomscientific.com/doccenter/archives/training/jawskeystrokes.htm" target="_docs">JAWS Keyboard Documentation</a></td>
            <td><a href="http://www.nvaccess.org/files/nvda/documentation/userGuide.html" target="_docs">NVDA Documentation</a></td>
            <td><a href="https://www.apple.com/voiceover/info/guide/" target="_docs">Voice Over Guide</a></td>
          </tr>
        </tbody>
      </table>



    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: No Labels</title>

    <style id="style">
      div.label {
        margin: 0;
        padding: 0;
        margin-top: 1.125em;
        margin-bottom: 0.125em;
        font-size: 100%;
        font-weight: bold;
        color: black;
        display: block;
        text-align: left;
      }

      div.group {
        margin: 0;
        padding: 0;
        margin-top: 1.25em;
      }

      div.group div.title {
        margin: 0;
        padding: 0;
        font-weight: bold;
      }

      div.group div.label {
        margin: 0;
        padding: 0;
        margin-top: 0.25em;
        margin-bottom: 0.25em;
        font-weight: normal;
      }

      input[type="submit"] {
        margin-top: 2em;
      }
    </style>

    <contents>
      <h2>Problems</h2>

      <ul>
        <li>Form controls do not have labels.</li>
        <li>No keyboard focus styling.</li>
      </ul>

      <form id="form">
          <h2>Pizza Form</h2>
          <div class="label">Name</div>
          <input id="id-name" type="text" size="30"/>

          <div class="label">Address</div>
          <input id="id-address" type="text" size="40"/>

          <div class="label">Phone</div>
          <input id="id-phone" type="text" size="14"/>

          <div class="label">Delivery Method</div>
          <select id="id-delivery">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>

          <div class="group">
            <div class="title">Crust</div>
            <div class="label">
              <input id="id-crust" name="crust" type="radio" value="Thin"/>
              Thin
            </div>
            <div class="label">
              <input name="crust" type="radio" value="Classic"/>
              Classic
            </div>
            <div class="label">
              <input name="crust" type="radio" value="Deep Dish"/>
              Deep Dish
            </div>
          </div>

          <div class="group">
            <div class="title">Toppings</div>
            <div class="label">
              <input name="topping" type="checkbox" value="Sausage"/>
                Sausage
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Pepperoni"/>
                Pepperoni
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Mushrooms"/>
              Mushrooms
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Onions"/>
              Onions
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Green Peppers"/>
              Green Peppers
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Black Olives"/>
              Back Olives
            </div>
            <div class="label">
              <input name="topping" type="checkbox" value="Extra Cheese"/>
              Extra cheese
            </div>
          </div>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <p><a href="https://webedit.disability.illinois.edu/user/jongund/form-labeling/copy/" target="_webedit">WebEdit: Add labels to form control</a></p>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Label Element by Reference</title>

    <style id="style">
      label,
      div.group  div.title {
        margin: 0;
        padding: 0;
        font-size: 100%;
        font-weight: bold;
        color: black;
        display: block;
        text-align: left;
        margin-top: 1.25em;
      }

      div.group div.item {
        position: relative;
        left: -0.5em;
        margin: 0;
        padding: 0;
        padding-left: 0.5em;
        padding-top: 0.125em;
        padding-bottom: 0.125em;
        border: 2px solid transparent;
        width: 9em;
      }

      div.group label {
        margin: 0;
        padding: 0;
        display: inline;
        font-weight: normal;
      }

      select {
        margin: 0;
        padding: 0;
        margin-bottom: 1.25em;
        background-color: #FFFEFF;
        font-size: 1em;
      }

      input[type="submit"] {
        margin-top: 2em;
      }

      input[type=submit]:focus {
        outline: 2px solid black;
      }

      input[type="text"]:hover,
      div.group div.item:hover {
        background-color: #ADDFFF;
      }

      input[type="text"]:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      select:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      div.group div.focus {
        background-color: #EEEEEE;
        border-color: black;
      }
    </style>

    <contents>

      <form id="form">
        <h2>Pizza Form</h2>
          <label for="id-name">Name</label>
          <input id="id-name" type="text" size="30"/>

          <label for="id-address">Address</label>
          <input id="id-address" type="text" size="40"/>

          <label for="id-phone">Phone</label>
          <input id="id-phone" type="text" size="14"/>

          <label for="id-delivery">Delivery Method</label>
          <select id="id-delivery">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>

        <div class="group">
          <div class="title">Crust</div>
          <div class="item">
            <input id="id-crust1" name="crust" type="radio" value="Thin"/>
            <label for="id-crust1">Thin</label>
          </div>
          <div class="item">
            <input id="id-crust2" name="crust" type="radio" value="Classic"/>
            <label for="id-crust2">Classic</label>
          </div>
          <div class="item">
            <input id="id-crust3" name="crust" type="radio" value="Deep Dish"/>
            <label for="id-crust3">Deep Dish</label>
          </div>
        </div>

        <div class="group">
          <div class="title">Toppings</div>
          <div class="item">
            <input id="id-top1" name="topping" type="checkbox" value="Sausage"/>
            <label for="id-top1">Sausage</label>
          </div>
          <div class="item">
            <input id="id-top2" name="topping" type="checkbox" value="Pepperoni"/>
            <label for="id-top2">Pepperoni</label>
          </div>
          <div class="item">
            <input id="id-top3" name="topping" type="checkbox" value="Mushrooms"/>
            <label for="id-top3">Mushrooms</label>
          </div>
          <div class="item">
            <input id="id-top4" name="topping" type="checkbox" value="Onions"/>
            <label for="id-top4">Onions</label>
          </div>
          <div class="item">
            <input id="id-top5" name="topping" type="checkbox" value="Green Peppers"/>
            <label for="id-top5">Green Peppers</label>
          </div>
          <div class="item">
            <input id="id-top6" name="topping" type="checkbox" value="Black Olives"/>
            <label for="id-top6">Back Olives</label>
          </div>
          <div class="item">
            <input id="id-top7" name="topping" type="checkbox" value="Extra Cheese"/>
            <label for="id-top7">Extra cheese</label>
          </div>
        </div>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <p style="margin-top: 2em;"><a href="https://webedit.disability.illinois.edu/user/jongund/form-labeling/copy/" target="_webedit">WebEdit: Add labels to form controls using <code>label</code> encapsulation</a>.</p>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
           var itemList = document.querySelectorAll('div.item input');

           for(var i = 0; i &lt; itemList.length; i++) {
              var item = itemList[i];
              item.addEventListener('focus', itemFocus, true);
              item.addEventListener('blur', itemBlur, true);
           }
        }, false);

      </script>

      <script type="text/javascript">

        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Label Encapsulation</title>
    <style id="style">

      label,
      div.group div.title {
        display: block;
        margin: 0;
        padding: 0;
        font-size: 100%;
        font-weight: bold;
        color: black;
        text-align: left;
        margin-top: 1.25em;
      }

      input[type="text"],
      select {
        margin: 0;
        padding: 0;
        display: block;
      }

      div.group label {
        margin: 0;
        padding: 0;
        display: block;
        font-weight: normal;
        position: relative;
        left: -0.5em;
        margin: 0;
        padding: 0;
        padding-left: 0.5em;
        padding-top: 0.125em;
        padding-bottom: 0.125em;
        border: 2px solid transparent;
        width: 9em;
      }

      select {
        margin: 0;
        padding: 0;
        margin-bottom: 1.25em;
        background-color: #FFFEFF;
        font-size: 1em;
      }

      input[type="submit"] {
        margin-top: 2em;
      }
      input[type=submit]:focus {
        outline: 2px solid black;
      }

      input[type="text"]:hover,
      div.group label:hover {
        background-color: #ADDFFF;
      }

      input[type="text"]:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      select:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      div.group label.focus {
        background-color: #EEEEEE;
        border-color: black;
      }
    </style>

    <contents>
      <form id="form">
        <h2>Pizza Form</h2>
        <label>
          Name
          <input id="id-name" type="text" size="30"/>
        </label>

        <label>
          Address
          <input id="id-address" type="text" size="40"/>
        </label>

        <label>
          Phone
          <input id="id-phone" type="text" size="14"/>
        </label>

        <label>
          Delivery Method
          <select id="id-delivery">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>
        </label>

        <div class="group">
          <div class="title">Crust</div>
          <label>
            <input id="id-crust" name="crust" type="radio" value="Thin"/>
            Thin
          </label>
          <label>
            <input name="crust" type="radio" value="Classic"/>
            Classic
          </label>
          <label>
            <input name="crust" type="radio" value="Deep Dish"/>
            Deep Dish
          </label>
        </div>

        <div class="group">
          <div class="title">Toppings</div>
          <label>
            <input name="topping" type="checkbox" value="Sausage"/>
            Sausage
          </label>
          <label>
            <input name="topping" type="checkbox" value="Pepperoni"/>
            Pepperoni
          </label>
          <label>
            <input name="topping" type="checkbox" value="Mushrooms"/>
            Mushrooms
          </label>
          <label>
            <input name="topping" type="checkbox" value="Onions"/>
            Onions
          </label>
          <label>
            <input name="topping" type="checkbox" value="Green Peppers"/>
            Green Peppers
          </label>
          <label>
            <input name="topping" type="checkbox" value="Black Olives"/>
            Back Olives
          </label>
          <label>
            <input name="topping" type="checkbox" value="Extra Cheese"/>
            Extra cheese
          </label>
        </div>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <p style="margin-top: 2em;"><a href="https://webedit.disability.illinois.edu/user/jongund/form-labeling/copy/" target="_webedit">WebEdit: Add labels to form controls using <code>label</code> encapsulation</a>.</p>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script id="script" type="text/javascript">

        function itemFocus(event) {
         if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
          var itemList = document.querySelectorAll('div.group input');

          for(var i = 0; i &lt; itemList.length; i++) {
            var item = itemList[i];
            item.addEventListener('focus', itemFocus, true);
            item.addEventListener('blur', itemBlur, true);
          }
        }, false);

      </script>

      <script type="text/javascript">

        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>


  <slide>
    <title>Pizza Order Form: Fieldset/Legend</title>

    <style id="style">

      label,
      fieldset legend {
        margin: 0;
        padding: 0;
        font-size: 100%;
        font-weight: bold;
        color: black;
        display: block;
        text-align: left;
        margin-top: 1.25em;
      }

      input[type="text"],
      select {
        margin: 0;
        padding: 0;
        display: block;
      }

      fieldset legend {
        padding-top: 1.25em;
      }

      fieldset label {
        margin: 0;
        padding: 0;
        display: block;
        font-weight: normal;
        position: relative;
        left: -0.5em;
        margin: 0;
        padding: 0;
        padding-left: 0.5em;
        padding-top: 0.125em;
        padding-bottom: 0.125em;
        border: 2px solid transparent;
        width: 9em;
      }

      select {
        margin: 0;
        padding: 0;
        margin-bottom: 1.25em;
        background-color: #FFFEFF;
        font-size: 1em;
      }

      input[type="submit"] {
        margin-top: 2em;
      }
        input[type=submit]:focus {
        outline: 2px solid black;
      }

      input[type="text"]:hover,
      fieldset label:hover {
        background-color: #ADDFFF;
      }

      input[type="text"]:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      select:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      fieldset label.focus {
        background-color: #EEEEEE;
        border-color: black;
      }
    </style>

    <contents>
      <form id="form">

        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <label for="id-delivery">Delivery Method</label>
        <select id="id-delivery">
          <option>Eat in store</option>
          <option>Pickup</option>
          <option>Home delivery</option>
        </select>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input id="id-crust1" name="crust" type="radio" value="Thin"/>
            Thin
          </label>

          <label>
            <input id="id-crust2" name="crust" type="radio" value="Classic"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <label>
            <input name="topping" type="checkbox" value="Sausage"/>
            Sausage
          </label>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script id="script" type="text/javascript">


        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
          var itemList = document.querySelectorAll('fieldset input');

          for(var i = 0; i &lt; itemList.length; i++) {
            var item = itemList[i];
            item.addEventListener('focus', itemFocus, true);
            item.addEventListener('blur', itemBlur, true);
          }
        }, false);

      </script>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Focus Styling</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 100%;
      }

      fieldset label {
      margin: 0;
      padding: 0;
      padding-top: 0.125em;
      padding-bottom: 0.125em;
      padding-left: 0.5em;
      width: 10em;
      font-weight: normal;
      border: 2px transparent solid;
      display: block;
      position: relative;
      left: -0.5em;
      }

      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      fieldset label:hover {
      background-color: #ADDFFF;
      }

      fieldset label.focus {
      border-color: black;
      background-color: #ADDFFF;
      }
    </style>

    <contents>
      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

      </script>

      <h2>Features</h2>
      <ul>
        <li><code>hover</code> and <code>focus</code> styling the similar to harmonize look and feel of styling between interaction techniques.</li>
        <li><code>focus</code> styling has a border and <code>hover</code> does not.</li>
        <li><code>focus</code> styling used a 2px <code>border</code> or <code>outline</code> width to make the control with focus salient to users.</li>
        <li>Need to use <code>onfocus</code> and <code>onblur</code> events to create focus styling of radio buttons and checkboxes with their labels.</li>
        <li>Styling background color also makes the change in focus much easier to detect visually.</li>
        <li>Do not set <code>hover</code> styling for <code>select</code> control.</li>
      </ul>


      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <label for="id-delivery">Delivery Method</label>
        <select id="id-delivery">
          <option>Eat in store</option>
          <option>Pickup</option>
          <option>Home delivery</option>
        </select>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input name="crust" type="radio" value="Thin" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Thin
          </label>

          <label>
            <input name="crust" type="radio" value="Classic" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <label>
            <input name="topping" type="checkbox" value="Sausage" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Sausage
          </label>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>


  <slide>
    <title>Form Evaluation and Inspection Tools and Rules</title>
    <contents>
      <ul>
        <li><a href="https://addons.mozilla.org/en-us/firefox/addon/ainspector-sidebar/">AInspector Sidebar for Firefox</a></li>
        <li><a href="https://fae.disability.illinois.edu">Functional Accessibility Evaluator (FAE) 2.0</a></li>
        <li><a href="https://accessibility-bookmarklets.org/install.html">Accessibility Bookmarklets</a></li>
        <li><a href="https://fae.disability.illinois.edu/rulesets/ruleset/ARIA_STRICT/#rc7">Rules for creating accessible forms</a></li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Instructions using tabindex</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 100%;
      }

      fieldset label {
      margin: 0;
      padding: 0;
      padding-top: 0.125em;
      padding-bottom: 0.125em;
      padding-left: 0.5em;
      width: 10em;
      font-weight: normal;
      border: 2px transparent solid;
      display: block;
      position: relative;
      left: -0.5em;
      }

      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      fieldset label:hover {
      background-color: #ADDFFF;
      }

      fieldset label.focus {
      border-color: black;
      background-color: #ADDFFF;
      }

      .instructions {
      padding: 0;
      margin: 0;
      margin-top: 0.25em;
      margin-bottom: 0.25em;
      font-style: italic;
      }

    </style>

    <contents>
      <script id="script" type="text/javascript">

        function itemFocus(event) {
        if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
        if( event.target ) event.target.parentNode.classList.remove("focus");
        }

      </script>

      <h2>Features</h2>
      <ul>
        <li>Instructions are placed before the form control to support all users who read from top to botton, but especially screen reader users.</li>
        <li>Uses <code>tabindex=0</code> to create a tab stop for the instructions.</li>
        <li>This technique helps screen reader users <em>hear</em> the instructions before they get to the form controls.
          As they <kbd>tab</kbd> throught the page they will tab to the instructions.</li>
        <li>Keyboard only users maybe a little annoyed at the extra tab stop between interactive controls.</li>
      </ul>


      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <label for="id-delivery">Delivery Method</label>
        <div id="ex1a">
           <div tabindex="0" class="instructions">Free home delivery on Monday's and Tuesday nights.</div>
        </div>
        <select id="id-delivery">
          <option>Eat in store</option>
          <option>Pickup</option>
          <option>Home delivery</option>
        </select>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input name="crust" type="radio" value="Thin" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Thin
          </label>

          <label>
            <input name="crust" type="radio" value="Classic" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <div id="ex1b">
            <div tabindex="0" class="instructions">First topping is free and $1.00 extra for each additional topping.</div>
          </div>

          <label>
            <input name="topping" type="checkbox" value="Sausage" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Sausage
          </label>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <pre><code id="sc2"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'ex1a');
        sourceCode.add('sc2', 'ex1b');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Instructions using label</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 100%;
      }

      fieldset label {
      margin: 0;
      padding: 0;
      padding-top: 0.125em;
      padding-bottom: 0.125em;
      padding-left: 0.5em;
      width: 10em;
      font-weight: normal;
      border: 2px transparent solid;
      display: block;
      position: relative;
      left: -0.5em;
      }

      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      fieldset label:hover {
      background-color: #ADDFFF;
      }

      fieldset label.focus {
      border-color: black;
      background-color: #ADDFFF;
      }

      .instructions {
      padding: 0;
      margin: 0;
      margin-top: 0.25em;
      margin-bottom: 0.25em;
      font-style: italic;
      width: 100%;
      font-weight: normal;
      }

    </style>

    <contents>
      <script id="script" type="text/javascript">

        function itemFocus(event) {
        if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
        if( event.target ) event.target.parentNode.classList.remove("focus");
        }

      </script>

      <h2>Features</h2>
      <ul>
        <li>Instructions are placed before the form control to support all users who read from top to botton, but especially screen reader users.</li>
        <li>Uses <code>label[for]</code> to add instructions to related control.</li>
        <li>This technique helps screen reader users <em>hear</em> the instructions when they get to the related form control.
          Less predictable how a screen reader will read the instruction information.</li>
        <li>Does not affect keyboard only users.</li>
      </ul>


      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <div id="ex1a">
          <label for="id-delivery">Delivery Method</label>
          <label for="id-delivery" class="instructions">Free home delivery on Monday's and Tuesday nights.</label>
          <select id="id-delivery">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>
        </div>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input name="crust" type="radio" value="Thin" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Thin
          </label>

          <label>
            <input name="crust" type="radio" value="Classic" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <div id="ex1b">
            <label for="topping1" class="instructions">First topping is free and $1.00 extra for each additional topping.</label>

            <label>
              <input id="topping1" name="topping" type="checkbox" value="Sausage" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
              Sausage
            </label>
          </div>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1a"></code></pre>

      <pre><code id="sc1b"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1a', 'ex1a');
        sourceCode.add('sc1b', 'ex1b');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>


  <slide>
    <title>Pizza Order Form: Instructions using aria-describedy</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 100%;
      }

      fieldset label {
      margin: 0;
      padding: 0;
      padding-top: 0.125em;
      padding-bottom: 0.125em;
      padding-left: 0.5em;
      width: 10em;
      font-weight: normal;
      border: 2px transparent solid;
      display: block;
      position: relative;
      left: -0.5em;
      }

      input[type=submit] {
      margin-top: 2em;
      }


      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      fieldset label:hover {
      background-color: #ADDFFF;
      }

      fieldset label.focus {
      border-color: black;
      background-color: #EEEEEE;
      }

      .instructions {
      padding: 0;
      margin: 0;
      margin-top: 0.25em;
      margin-bottom: 0.25em;
      font-style: italic;
      width: 100%;
      font-weight: normal;
      }

    </style>

    <contents>
      <script id="script" type="text/javascript">

        function itemFocus(event) {
        if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
        if( event.target ) event.target.parentNode.classList.remove("focus");
        }

      </script>

      <h2>Features</h2>
      <ul>
        <li>Instructions are placed before the form control to support all users who read from top to bottom, but especially screen reader users.</li>
        <li>Uses <code>aria-describedby</code> to reference instructions for related control.</li>
        <li>This technique helps screen reader users <em>hear</em> the instructions when they get to the related form control.
          Screen readers may not be consistent in presenting the descriptive information.</li>
        <li>Does not affect keyboard only users.</li>
      </ul>


      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <div id="ex1a">
          <label for="id-delivery">Delivery Method</label>
          <p id="id-delivery-inst" class="instructions">Free home delivery on Monday's and Tuesday nights.</p>
          <select id="id-delivery" aria-describedby="id-delivery-inst">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>
        </div>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input name="crust" type="radio" value="Thin" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Thin
          </label>

          <label>
            <input name="crust" type="radio" value="Classic" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <div id="ex1b">

            <p id="topping-inst" class="instructions">First topping is free and $1.00 extra for each additional topping.</p>

            <label>
              <input id="topping1" name="topping" type="checkbox" value="Sausage" onfocus="itemFocus(event)" onblur="itemBlur(event)" aria-describedby="topping-inst"/>
              Sausage
            </label>
          </div>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>


      <h2>HTML Source Code</h2>

      <pre><code id="sc1a"></code></pre>

      <pre><code id="sc1b"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1a', 'ex1a');
        sourceCode.add('sc1b', 'ex1b');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: Required Form Controls</title>
    <style id="style">


      .required {
      color: blue;
      font-weight: normal;
      }

      input {
      display: block;
      }

      div input,
      div select {
      display: inline;
      }

      [required] + span:before,
      [aria-required="true"] + span:before {
      content: "(required)";
      color: blue;
      }

      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }

      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      input[type="submit"] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover{
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

    </style>

    <contents>
      <h2>Features</h2>
      <ul>
        <li>HTML5 <code>required</code> attribute (Preferred)</li>
        <li>Use the word "required" in the text label</li>
        <li>Use an <code>img</code> element with the <code>alt="required"</code></li>
        <li>ARIA 1.0 <code>aria-required="true"</code> attribute</li>
      </ul>

      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name <span class="required">(required)</span></label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address <img src="examples/images/required.png" alt="required"/></label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <div>
          <input id="id-phone" type="text" size="14" required=""/>
          <span></span>
        </div>

        <label for="id-delivery">Delivery Method</label>
        <div>
          <select id="id-delivery"  aria-required="true">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>
          <span></span>
        </div>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>


  <slide>
    <title>Pizza Order Form: aria-labelledby</title>

    <style id="style">
      div.label,
      div.label,
      div.group  div.title {
        margin: 0;
        padding: 0;
        font-size: 100%;
        font-weight: bold;
        color: black;
        display: block;
        text-align: left;
        margin-top: 1.25em;
      }

      div.group div.item {
        margin: 0;
        padding: 0;
        display: block;
        font-weight: normal;
        position: relative;
        left: -0.5em;
        margin: 0;
        padding: 0;
        padding-left: 0.5em;
        padding-top: 0.125em;
        padding-bottom: 0.125em;
        border: 2px solid transparent;
        width: 9em;
      }

      input[type="submit"] {
        margin-top: 2em;
      }
      input[type=submit]:focus {
        outline: 2px solid black;
      }

      input[type="text"]:hover,
      div.group div.item:hover {
        background-color: #ADDFFF;
      }

      input[type="text"]:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      select:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      div.group div.focus {
        background-color: #EEEEEE;
        border-color: black;
      }
    </style>

    <contents>
      <form id="form">
        <h2>Pizza Form</h2>

        <div id="lb1" class="label">Name</div>
        <input id="id-name" type="text" size="30" aria-labelledby="lb1"/>

        <div id="lb2" class="label">Address</div>
        <input id="id-address" type="text" size="40" aria-labelledby="lb2"/>

        <div id="lb3" class="label">Phone</div>
        <input id="id-phone" type="text" size="14" aria-labelledby="lb3"/>

        <div id="lb4" class="label">Delivery Method</div>
        <select id="id-delivery" aria-labelledby="lb4">
          <option>Eat in store</option>
          <option>Pickup</option>
          <option>Home delivery</option>
        </select>

        <div class="group">
          <div id="lb5" class="title">Crust</div>

          <div class="item">
            <input id="id-crust" name="crust" type="radio" value="Thin" aria-labelledby="lb5-1 lb5"/>
            <span id="lb5-1">Thin</span>
          </div>

          <div class="item">
            <input name="crust" type="radio" value="Classic" aria-labelledby="lb5-2 lb5"/>
            <span id="lb5-2">Classic</span>
          </div>

          <div class="item">
            <input name="crust" type="radio" value="Deep Dish" aria-labelledby="lb5-3 lb5"/>
            <span id="lb5-3">Deep Dish</span>
          </div>

        </div>

        <div class="group">
          <div id="lb6" class="title">Toppings</div>

          <div class="item">
            <input name="topping" type="checkbox" value="Sausage" aria-labelledby="lb6-1 lb6"/>
            <span id="lb6-1">Sausage</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Pepperoni" aria-labelledby="lb6-2 lb6"/>
            <span id="lb6-2">Pepperoni</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Mushrooms" aria-labelledby="lb6-3 lb6"/>
            <span id="lb6-3">Mushrooms</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Onions" aria-labelledby="lb6-4 lb6"/>
            <span id="lb6-4">Onions</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Green Peppers" aria-labelledby="lb6-5 lb6"/>
            <span id="lb6-5">Green Peppers</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Black Olives" aria-labelledby="lb6-6 lb6"/>
            <span id="lb6-6">Back Olives</span>
          </div>

          <div class="item">
            <input name="topping" type="checkbox" value="Extra Cheese" aria-labelledby="lb6-7 lb6"/>
            <span id="lb6-7">Extra cheese</span>
          </div>

        </div>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
          var itemList = document.querySelectorAll('div.group input');

          for(var i = 0; i &lt; itemList.length; i++) {
            var item = itemList[i];
            item.addEventListener('focus', itemFocus, true);
            item.addEventListener('blur', itemBlur, true);
          }
        }, false);

      </script>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Order Form: aria-label</title>

    <style id="style">
      div.label,
      div.label,
      div.group  div.title {
        margin: 0;
        padding: 0;
        font-size: 100%;
        font-weight: bold;
        color: black;
        display: block;
        text-align: left;
        margin-top: 1.25em;
      }

      div.group div.item {
        margin: 0;
        padding: 0;
        display: block;
        font-weight: normal;
        position: relative;
        left: -0.5em;
        margin: 0;
        padding: 0;
        padding-left: 0.5em;
        padding-top: 0.125em;
        padding-bottom: 0.125em;
        border: 2px solid transparent;
        width: 9em;
      }

      select {
        margin: 0;
        padding: 0;
        margin-bottom: 1.25em;
        background-color: #FFFEFF;
        font-size: 1em;
      }

      input[type="submit"] {
        margin-top: 2em;
      }

      input[type=submit]:focus {
        outline: 2px solid black;
      }

      input[type="text"]:hover,
        div.group div.item:hover {
        background-color: #ADDFFF;
      }

      input[type="text"]:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      select:focus {
        outline: 2px solid black;
        background-color: #EEEEEE;
      }

      div.group div.focus {
        background-color: #EEEEEE;
        border-color: black;
      }
    </style>

    <contents>
      <form id="form">
        <h2>Pizza Form</h2>

          <div class="label">Name</div>
          <input id="id-name" type="text" size="30" aria-label="Name"/>

          <div class="label">Address</div>
          <input id="id-address" type="text" size="40" aria-label="Address"/>

          <div class="label">Phone</div>
          <input id="id-phone" type="text" size="14" aria-label="Phone"/>

          <div class="label">Delivery Method</div>
          <select id="id-delivery" aria-label="Delivery method">
            <option>Eat in store</option>
            <option>Pickup</option>
            <option>Home delivery</option>
          </select>

        <div class="group">
          <div class="title">Crust</div>
          <div class="item">
            <input id="id-crust" name="crust" type="radio" value="Thin" aria-label="Thin crust"/>
            Thin
          </div>
          <div class="item">
            <input name="crust" type="radio" value="Classic" aria-label="Classic crust"/>
            Classic
          </div>
          <div class="item">
            <input name="crust" type="radio" value="Deep Dish" aria-label="Deep dish crust"/>
            Deep Dish
          </div>
        </div>

        <div class="group">
          <div class="title">Toppings</div>
          <div class="item">
            <input name="topping" type="checkbox" value="Sausage" aria-label="Sausage topping"/>
            Sausage
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Pepperoni" aria-label="Pepperoni topping"/>
            Pepperoni
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Mushrooms" aria-label="Mushroom topping"/>
            Mushrooms
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Onions" aria-label="Onion topping"/>
            Onions
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Green Peppers" aria-label="Green pepper topping"/>
            Green Peppers
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Black Olives" aria-label="Black olive topping"/>
            Back Olives
          </div>
          <div class="item">
            <input name="topping" type="checkbox" value="Extra Cheese" aria-label="Extra cheese topping"/>
            Extra cheese
          </div>
        </div>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
          var itemList = document.querySelectorAll('div.group input');

          for(var i = 0; i &lt; itemList.length; i++) {
            var item = itemList[i];
            item.addEventListener('focus', itemFocus, true);
            item.addEventListener('blur', itemBlur, true);
          }
        }, false);

      </script>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>


  <slide>
    <title>Billing/Shipping Form: No group identification</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: normal;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      div.group div.title {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 120%;
      border-bottom: solid thin gray;
      }


      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

    </style>

    <contents>


      <h2>Accessibility Issues</h2>
      <ul>
        <li>No labeling information to uniquely differentiate the billing and shipping name, address, state and zip code controls.</li>
      </ul>


      <form id="form">
        <h2>Order Form</h2>

        <div class="group">
          <div class="title">Billing Information</div>

          <label for="billing-name">Name</label>
          <input id="billing-name" type="text" size="30"/>

          <label for="billing-address">Address</label>
          <input id="billing-address" type="text" size="40"/>

          <label for="billing-state">State</label>
          <select id="billing-state">
            <option>Choose your state</option>
            <option>Alabama</option>
            <option>Alaska</option>
            <option>Arizona </option>
            <option>Arkansas</option>
            <option>California</option>
            <option>Colorado</option>
            <option>Connecticut</option>
            <option>Delaware</option>
            <option>Florida</option>
            <option>Georgia</option>
            <option>Hawaii</option>
            <option>Idaho</option>
            <option>Illinois</option>
            <option>Indiana</option>
            <option>Iowa</option>
            <option>Kansas</option>
            <option>Kentucky</option>
            <option>Louisiana</option>
            <option>Maine</option>
            <option>Maryland</option>
            <option>Massachusetts</option>
            <option>Michigan</option>
            <option>Minnesota</option>
            <option>Mississippi</option>
            <option>Missouri</option>
            <option>Montana</option>
            <option>Nebraska</option>
            <option>Nevada</option>
            <option>New Hampshire</option>
            <option>New Jersey</option>
            <option>New Mexico</option>
            <option>New York </option>
            <option>North Carolina</option>
            <option>North Dakota </option>
            <option>Ohio</option>
            <option>Oklahoma</option>
            <option>Oregon</option>
            <option>Pennsylvania</option>
            <option>Rhode Island</option>
            <option>South Carolina</option>
            <option>South Dakota</option>
            <option>Tennessee</option>
            <option>Texas</option>
            <option>Utah</option>
            <option>Vermont</option>
            <option>Virginia</option>
            <option>Washington</option>
            <option>West Virginia</option>
            <option>Wisconsin</option>
            <option>Wyoming</option>s
          </select>

          <label for="billing-zip">Zip Code</label>
          <input id="billing-zip" type="text" size="12"/>

        </div>

        <div class="group">
          <div class="title">Shipping Information</div>
          <label for="shipping-name">Name</label>
          <input id="shipping-name" type="text" size="30"/>

          <label for="shipping-address">Address</label>
          <input id="shipping-address" type="text" size="40"/>

          <label for="shipping-state">State</label>
          <select id="shipping-state">
            <option>Choose your state</option>
            <option>Alabama</option>
            <option>Alaska</option>
            <option>Arizona </option>
            <option>Arkansas</option>
            <option>California</option>
            <option>Colorado</option>
            <option>Connecticut</option>
            <option>Delaware</option>
            <option>Florida</option>
            <option>Georgia</option>
            <option>Hawaii</option>
            <option>Idaho</option>
            <option>Illinois</option>
            <option>Indiana</option>
            <option>Iowa</option>
            <option>Kansas</option>
            <option>Kentucky</option>
            <option>Louisiana</option>
            <option>Maine</option>
            <option>Maryland</option>
            <option>Massachusetts</option>
            <option>Michigan</option>
            <option>Minnesota</option>
            <option>Mississippi</option>
            <option>Missouri</option>
            <option>Montana</option>
            <option>Nebraska</option>
            <option>Nevada</option>
            <option>New Hampshire</option>
            <option>New Jersey</option>
            <option>New Mexico</option>
            <option>New York </option>
            <option>North Carolina</option>
            <option>North Dakota </option>
            <option>Ohio</option>
            <option>Oklahoma</option>
            <option>Oregon</option>
            <option>Pennsylvania</option>
            <option>Rhode Island</option>
            <option>South Carolina</option>
            <option>South Dakota</option>
            <option>Tennessee</option>
            <option>Texas</option>
            <option>Utah</option>
            <option>Vermont</option>
            <option>Virginia</option>
            <option>Washington</option>
            <option>West Virginia</option>
            <option>Wisconsin</option>
            <option>Wyoming</option>s
          </select>

          <label for="shipping-zip">Zip Code</label>
          <input id="shipping-zip" type="text" size="12"/>

        </div>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>

  <slide>
    <title>Billing/Shipping Form: Fieldset/Legend</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: normal;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 120%;
      }


      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

    </style>

    <contents>


      <h2>Features</h2>
      <ul>
        <li><code>fieldset/legend</code> is used to provide unique labels to the billing and shipping address information.</li>
      </ul>


      <form id="form">
        <h2>Order Form</h2>

        <fieldset>
          <legend>Billing Information</legend>
          <label for="billing-name">Name</label>
          <input id="billing-name" type="text" size="30"/>

          <label for="billing-address">Address</label>
          <input id="billing-address" type="text" size="40"/>

          <label for="billing-state">State</label>
          <select id="billing-state">
            <option>Choose your state</option>
            <option>Alabama</option>
            <option>Alaska</option>
            <option>Arizona </option>
            <option>Arkansas</option>
            <option>California</option>
            <option>Colorado</option>
            <option>Connecticut</option>
            <option>Delaware</option>
            <option>Florida</option>
            <option>Georgia</option>
            <option>Hawaii</option>
            <option>Idaho</option>
            <option>Illinois</option>
            <option>Indiana</option>
            <option>Iowa</option>
            <option>Kansas</option>
            <option>Kentucky</option>
            <option>Louisiana</option>
            <option>Maine</option>
            <option>Maryland</option>
            <option>Massachusetts</option>
            <option>Michigan</option>
            <option>Minnesota</option>
            <option>Mississippi</option>
            <option>Missouri</option>
            <option>Montana</option>
            <option>Nebraska</option>
            <option>Nevada</option>
            <option>New Hampshire</option>
            <option>New Jersey</option>
            <option>New Mexico</option>
            <option>New York </option>
            <option>North Carolina</option>
            <option>North Dakota </option>
            <option>Ohio</option>
            <option>Oklahoma</option>
            <option>Oregon</option>
            <option>Pennsylvania</option>
            <option>Rhode Island</option>
            <option>South Carolina</option>
            <option>South Dakota</option>
            <option>Tennessee</option>
            <option>Texas</option>
            <option>Utah</option>
            <option>Vermont</option>
            <option>Virginia</option>
            <option>Washington</option>
            <option>West Virginia</option>
            <option>Wisconsin</option>
            <option>Wyoming</option>s
          </select>

          <label for="billing-zip">Zip Code</label>
          <input id="billing-zip" type="text" size="12"/>

        </fieldset>

        <fieldset>
          <legend>Shipping Information</legend>
          <label for="shipping-name">Name</label>
          <input id="shipping-name" type="text" size="30"/>

          <label for="shipping-address">Address</label>
          <input id="shipping-address" type="text" size="40"/>

          <label for="shipping-state">State</label>
          <select id="shipping-state">
            <option>Choose your state</option>
            <option>Alabama</option>
            <option>Alaska</option>
            <option>Arizona </option>
            <option>Arkansas</option>
            <option>California</option>
            <option>Colorado</option>
            <option>Connecticut</option>
            <option>Delaware</option>
            <option>Florida</option>
            <option>Georgia</option>
            <option>Hawaii</option>
            <option>Idaho</option>
            <option>Illinois</option>
            <option>Indiana</option>
            <option>Iowa</option>
            <option>Kansas</option>
            <option>Kentucky</option>
            <option>Louisiana</option>
            <option>Maine</option>
            <option>Maryland</option>
            <option>Massachusetts</option>
            <option>Michigan</option>
            <option>Minnesota</option>
            <option>Mississippi</option>
            <option>Missouri</option>
            <option>Montana</option>
            <option>Nebraska</option>
            <option>Nevada</option>
            <option>New Hampshire</option>
            <option>New Jersey</option>
            <option>New Mexico</option>
            <option>New York </option>
            <option>North Carolina</option>
            <option>North Dakota </option>
            <option>Ohio</option>
            <option>Oklahoma</option>
            <option>Oregon</option>
            <option>Pennsylvania</option>
            <option>Rhode Island</option>
            <option>South Carolina</option>
            <option>South Dakota</option>
            <option>Tennessee</option>
            <option>Texas</option>
            <option>Utah</option>
            <option>Vermont</option>
            <option>Virginia</option>
            <option>Washington</option>
            <option>West Virginia</option>
            <option>Wisconsin</option>
            <option>Wyoming</option>s
          </select>

          <label for="shipping-zip">Zip Code</label>
          <input id="shipping-zip" type="text" size="12"/>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Service Survey: no labels</title>

    <style id="style">

      table.survey th.rating,
      table.survey td.rating {
        text-align: center;
      }

      table.survey tbody th {
        font-weight: normal;
      }

    </style>

    <contents>
      <h2>Problems</h2>

      <ul>
        <li>Radio buttons do not have any natural unique text on the page to use as a label.</li>
        <li>No keyboard focus styling.</li>
      </ul>

      <form id="form">
        <h2>Pizza Survey</h2>

        <table class="survey table table-striped">
          <thead>
            <tr>
              <th class="question">Question</th>
              <th class="rating">Very Dissatisfied</th>
              <th class="rating">Dissatisfied</th>
              <th class="rating">Neutral</th>
              <th class="rating">Satisfied</th>
              <th class="rating">Very Satisfied</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th class="question">Quality of your ordering experience?</th>
              <td class="rating"><input name="q1" type="radio" value="1"/></td>
              <td class="rating"><input name="q1" type="radio" value="2"/></td>
              <td class="rating"><input name="q1" type="radio" value="3"/></td>
              <td class="rating"><input name="q1" type="radio" value="4"/></td>
              <td class="rating"><input name="q1" type="radio" value="5"/></td>
            </tr>
            <tr>
              <th class="question">Quality of Pizza?</th>
              <td class="rating"><input name="q2" type="radio" value="1"/></td>
              <td class="rating"><input name="q2" type="radio" value="2"/></td>
              <td class="rating"><input name="q2" type="radio" value="3"/></td>
              <td class="rating"><input name="q2" type="radio" value="4"/></td>
              <td class="rating"><input name="q2" type="radio" value="5"/></td>
            </tr>
            <tr>
              <th class="question">Quality of your Pizza delivery?</th>
              <td class="rating"><input name="q3" type="radio" value="1"/></td>
              <td class="rating"><input name="q3" type="radio" value="2"/></td>
              <td class="rating"><input name="q3" type="radio" value="3"/></td>
              <td class="rating"><input name="q3" type="radio" value="4"/></td>
              <td class="rating"><input name="q3" type="radio" value="5"/></td>
            </tr>
          </tbody>
        </table>

        <input type="submit" value="Submit Survey"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Pizza Service Survey: aria-labelledby</title>

    <style id="style">

      table.survey th.rating,
      table.survey td.rating {
      text-align: center;
      }

      table.survey tbody th {
      font-weight: normal;
      }

      table.survey input:focus,
      table.survey input:hover {
        outline: 2px solid #444444;
        outline-offset: 0.25em;
      }

    </style>

    <contents>
      <h2>Features</h2>

      <ul>
        <li>Uses <code>aria-labelledby</code> to label radio buttons with existing visible content on the page.</li>
        <li>Keyboard focus and hover styling use CSS <code>:focus</code> and <code>:hover</code> pseudo selectors with the <code>outline</code> property.</li>
      </ul>

      <form id="form">
        <h2>Pizza Survey</h2>

        <table class="survey table table-striped">
          <thead>
            <tr>
              <th class="question">Question</th>
              <th id="r1" class="rating">Very Dissatisfied</th>
              <th id="r2" class="rating">Dissatisfied</th>
              <th id="r3" class="rating">Neutral</th>
              <th id="r4" class="rating">Satisfied</th>
              <th id="r5" class="rating">Very Satisfied</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th id="q1" class="question">Quality of your ordering experience?</th>
              <td class="rating"><input name="q1" type="radio" value="1" aria-labelledby="r1 q1"/></td>
              <td class="rating"><input name="q1" type="radio" value="2" aria-labelledby="r2 q1"/></td>
              <td class="rating"><input name="q1" type="radio" value="3" aria-labelledby="r3 q1"/></td>
              <td class="rating"><input name="q1" type="radio" value="4" aria-labelledby="r4 q1"/></td>
              <td class="rating"><input name="q1" type="radio" value="5" aria-labelledby="r5 q1"/></td>
            </tr>
            <tr>
              <th id="q2" class="question">Quality of Pizza?</th>
              <td class="rating"><input name="q2" type="radio" value="1" aria-labelledby="r1 q2"/></td>
              <td class="rating"><input name="q2" type="radio" value="2" aria-labelledby="r2 q2"/></td>
              <td class="rating"><input name="q2" type="radio" value="3" aria-labelledby="r3 q2"/></td>
              <td class="rating"><input name="q2" type="radio" value="4" aria-labelledby="r4 q2"/></td>
              <td class="rating"><input name="q2" type="radio" value="5" aria-labelledby="r5 q2"/></td>
            </tr>
            <tr>
              <th id="q3" class="question">Quality of your Pizza delivery?</th>
              <td class="rating"><input name="q3" type="radio" value="1" aria-labelledby="r1 q3"/></td>
              <td class="rating"><input name="q3" type="radio" value="2" aria-labelledby="r2 q3"/></td>
              <td class="rating"><input name="q3" type="radio" value="3" aria-labelledby="r3 q3"/></td>
              <td class="rating"><input name="q3" type="radio" value="4" aria-labelledby="r4 q3"/></td>
              <td class="rating"><input name="q3" type="radio" value="5" aria-labelledby="r6 q3"/></td>
            </tr>
          </tbody>
        </table>

        <input type="submit" value="Submit Survey"/>

      </form>

      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

        window.addEventListener('load', function load(event) {
          var itemList = document.querySelectorAll('td input');

          for(var i = 0; i &lt; itemList.length; i++) {
            var item = itemList[i];
            item.addEventListener('focus', itemFocus, true);
            item.addEventListener('blur', itemBlur, true);
          }
        }, false);

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>



  <slide>
    <title>Form Control Labeling Technique Summary</title>
    <contents>
      <h2><code>label</code> elements</h2>
      <ul>
        <li>Labels are visible</li>
        <li>Should be first choice for backward compatibility support</li>
        <li>Increases selection area for moving focus or toggling the state of a form control</li>
      </ul>

      <h2><code>title</code> attribute</h2>
      <ul>
        <li>Labels are hidden, except many browsers generate a popup tooltip when user hovers pointer over form control</li>
        <li>Backward compatibility support</li>
      </ul>

      <h2>ARIA 1.0 <code>aria-labelledby</code> attribute</h2>
      <ul>
        <li>Complex form labeling, where label text is visible on the page</li>
        <li>Require creating <code>id</code>s and <code>idrefs</code></li>
        <li>Can be used to retrofit form controls without labels, without affecting visual rendering</li>
      </ul>

      <h2>ARIA 1.0 <code>aria-label</code> attribute</h2>
      <ul>
        <li>Labeling text is not visible</li>
        <li>Can be used to retrofit form controls without labels, without affecting visual rendering</li>
      </ul>

      <h2>HTML5 <code>placeholder</code> attribute</h2>
      <ul>
        <li>Avoid use for form control labeling</li>
        <li>Used for both labeling and example input, so it is in a gray area of accessibility right now</li>
        <li>Compatibility issues</li>
      </ul>

    </contents>

  </slide>

  <slide>
    <title>Error Feedback: Alert Box</title>

    <style>
      h2, h3 {
      margin: 0;
      padding: 0;
      margin-top: 1em;
      }

      label {
      display: block;
      }

      div.text,
      div.select,
      fieldset,
      input[type="submit"] {
      margin-top: 0.5em;
      }

      fieldset {
      width: 25em;
      }

      label span {
        margin-left: 0.25em;
        font-weight: normal;
      }

      fieldset legend {
        margin: 0;
        padding: 0;
        margin-top: 1em;
        font-weight: bold;
        font-size: 110%;
      }


    </style>

    <contents>
      <h2>Features</h2>
      <ul>
        <li>HTML4 Techniques</li>
        <li><code>label</code> element for labeling</li>
        <li><code>fieldset/legend</code> elements for labeling groups of controls (e.g. crust and toppings)</li>
        <li>Image used to indicate required fields</li>
        <li>Dialog box for errors</li>
      </ul>

      <div role="region" aria-label="Example">

        <form id="form">
          <h2>Pizza Order Form</h2>
          <p><img src="images/required.png" alt="required"/> means required field</p>

          <div class="text">
            <label for="id-name">Name <img src="images/required.png" alt="required"/></label>
            <input id="id-name" type="text" size="30"/>
          </div>

          <div class="text">
            <label for="id-address">Address <img src="images/required.png" alt="required"/></label>
            <input id="id-address" type="text" size="40"/>
          </div>

          <div class="text">
            <label for="id-phone">Phone <img src="images/required.png" alt="required"/></label>
            <input id="id-phone" type="text" size="14"/>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust <img src="images/required.png" alt="required"/></legend>
            <label>
              <input id="id-crust" name="crust" type="radio" value="Thin"/>
                <span>Thin</span>
            </label>
            <label>
              <input name="crust" type="radio" value="Classic"/><span>Classic</span>
            </label>
            <label>
              <input name="crust" type="radio" value="Deep Dish"/><span>Deep Dish</span>
            </label>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <label>
              <input name="topping" type="checkbox" value="Sausage"/><span>Sausage</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Pepperoni"/><span>Pepperoni</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Mushrooms"/><span>Mushrooms</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Onions"/><span>Onions</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Green Peppers"/><span>Green Peppers</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Black Olives"/><span>Back Olives</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Extra Cheese"/><span>Extra cheese</span>
            </label>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script src="examples/js/submit-order.js" type="text/javascript"></script>

      <script id="script">

        function clearErrorFeedback() {
          // dummy function for error computation
        }

        function exampleErrorFeedback(errors) {
          var num_errors = errors.length;

          str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

          for (var i = 0; i &lt; num_errors; i++) {
            str += errors[i].message + "\n";
          }

          alert(str);
        }

      </script>


      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style', 'text');
        sourceCode.add('sc3', 'script', 'text');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Error Feedback: List of Errors</title>
    <style type="text/css">
      label {
        border: solid medium transparent;
      }

      label.focus {
        border-color: black;
        background-color: #FFFFA0;
      }

      input[type="text"]:focus,
      input[type="text"]:hover,
      select:focus,
      select:hover {
        background-color: #FFFFA0;
        outline: medium solid black;
      }

      h2, h3 {
        margin: 0;
        padding: 0;
        margin-top: 1em;
      }

      label {
        display: block;
      }

      div.text,
      div.select,
      fieldset,
      input[type="submit"] {
         margin-top: 0.5em;
      }

      fieldset {
        width: 20em;
      }

      fieldset legend {
        margin: 0;
        padding: 0;
        margin-top: 1em;
        font-weight: bold;
        font-size: 110%;
      }

      label span {
        padding-left: 0.25em;
        font-weight: normal;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li>HTML4 Techniques</li>
        <li><code>label</code> element for labeling</li>
        <li>Required fields is a part of label text</li>
        <li><code>fieldset/legend</code> elements for labeling groups of controls (e.g. crust and toppings)</li>
        <li>Error feedback through a list of links with error messages and headings to indicate the number of errors</li>
        <li><code>focus</code> and <code>blur</code> events to improve focus highlighting of form controls</li>
      </ul>

      <div role="region" aria-label="Example">

        <div id="id-errors" role="region" aria-label="Error information">

        </div>

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <label for="id-name">Name (required)</label>
            <input id="id-name" type="text" size="30"/>
          </div>

          <div class="text">
            <label for="id-address">Address (required)</label>
            <input id="id-address" type="text" size="40"/>
          </div>

          <div class="text">
            <label for="id-phone">Phone (required)</label>
            <input id="id-phone" type="text" size="14"/>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust (required)</legend>
            <label>
              <input id="id-crust" name="crust" type="radio" value="Thin"/><span>Thin</span>
            </label>
            <label>
              <input name="crust" type="radio" value="Classic"/><span>Classic</span>
            </label>
            <label>
              <input name="crust" type="radio" value="Deep Dish"/><span>Deep Dish</span>
            </label>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <label>
              <input name="topping" type="checkbox" value="Sausage"/><span>Sausage</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Pepperoni"/><span>Pepperoni</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Mushrooms"/><span>Mushrooms</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Onions"/><span>Onions</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Green Peppers"/><span>Green Peppers</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Black Olives"/><span>Back Olives</span>
            </label>
            <label>
              <input name="topping" type="checkbox" value="Extra Cheese"/><span>Extra cheese</span>
            </label>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script src="examples/js/submit-order.js" type="text/javascript"></script>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
        $(this).addClass('focus');
        },
        function() {
        $(this).removeClass('focus');
        });


        $('input[type="checkbox"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
        $(this).addClass('focus');
        },
        function() {
        $(this).removeClass('focus');
        });


        });



        // Error feedback code

        function moveFocus(id) {
           $('#'+id).focus();
        }

        function clearErrorFeedback() {
        $('div#id-errors').empty();
        $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
        var num_errors = errors.length;

        str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

        $('div#id-errors').css('display', 'block');

        $('div#id-errors').append('&lt;h2>&lt;a tabindex="-1" id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

        var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
          var e = errors[i];
          messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
          }
          messages += "&lt;/ol>\n";
          $('div#id-errors').append(messages);
          moveFocus('id-errors-start');
          }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Popup Error Message Example Summary</title>
    <contents>

      <h2 id="ID_COMMON">Common Features of All Examples</h2>

      <table class="survey table table-striped" aria-labelledby="ID_COMMON">
        <thead>
          <tr>
            <th>Feature</th>
            <th>Markup</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Required control</td>
            <td><code>required</code> attribute</td>
            <td>
              <ul>
                <li>Use the HTML5 <code>required</code> attribute communicate to assistive technology that the form field is required.</li>
                <li>The HTML5 <code>required</code> attribute is used over other techniques, since it provides the information using the native semantics of HTML5.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>Invalid value</td>
            <td><code>aria-invalid</code> attribute</td>
            <td>
              The <code>aria-invalid</code> attribute provides a means to communicate to assistive technology that the form field has an invalid value.
            </td>
          </tr>
          <tr>
            <td>Invalid value awareness</td>
            <td><code>role="status"</code> attribute</td>
            <td>
              <ul>
                <li>
                  The <code>role="status"</code> attribute on the element containing the error message creates a live region that will automatically speak when content changes.
                </li>
                <li>
                  The <code>status</code> value is used since it will not interrupt other speech, for example if the value <code>alert</code> was used it would immediately stop any other speech and announce the change, which in this case would be disorienting to the user.
                </li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>

      <h2 id="ID_ERROR_MSG">Referencing the Error Message</h2>

      <table class="survey table table-striped" aria-labelledby="ID_ERROR_MSG">
        <thead>
          <tr>
            <th>Example</th>
            <th>Accessible<br/>Name</th>
            <th>Accessible<br/>Description</th>
            <th>Notes</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Example 1</th>
            <td>
              <code>label[for]</code> element used to referenc the controls label.
            </td>
            <td>
              <em>none</em>
            </td>
            <td>
              No information provided on the error message when focus is moved to the invalide form control.
            </td>
          </tr>
          <tr>
            <th>Example 2</th>
            <td>
              <code>label[for]</code> element used to reference the controls label.
            </td>
            <td>
              <code>aria-describedby</code> attribute used to reference the error message.
            </td>
            <td>
              Error information is provided through the accessible description property.
            </td>
          </tr>
          <tr>
            <th>Example 3</th>
            <td>
              <code>label[for]</code> element used to reference the controls label.
            </td>
            <td>
              <code>title</code> attribute contains the error message content visible in the graphical rendering.
            </td>
            <td>
              Error information is provided through the accessible description property.
            </td>
          </tr>
          <tr>
            <th>Example 4</th>
            <td>
              <code>aria-labelledby</code> attribute is used to reference both label and the error message.
            </td>
            <td>
              <em>none</em>
            </td>
            <td>
              Error information is provided through the accessible name property.
            </td>
          </tr>
          <tr>
            <th>Example 5</th>
            <td>
              <ul>
                <li><code>label[for]</code> element used to referenc the controls label.</li>
                <li>If there is an error on a form control, the <code>aria-label</code> attribute is added and includes both the label and the error message.</li>
              </ul>
            </td>
            <td>
              <em>none</em>
            </td>
            <td>
              Error information is provided through the accessible name property.
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>


  <slide>
    <title>Popup Error Example 1: no reference to error message</title>

    <script src="js/submit-order.js" type="text/javascript"></script>

    <style id="style" type="text/css">
      div {
        border: solid medium transparent;
      }

      div.focus {
        border-color: black;
        background-color: #EEEEEE;
      }

      div.hover {
        border-color: black;
        background-color: #EEEEEE;
      }

      label.focus,
      input[type="text"]:focus,
      select:focus {
        background-color: #EEEEEE;
        outline: medium solid black;
      }

      label.hover,
      input[type="text"]:hover,
      select:hover {
        background-color: #EEEEEE;
        outline: medium solid black;
      }

      div.button {
        position: relative;
        left: -0.25em;
        width: 9em;
      }

      label input[type="radio"],
      label input[type="checkbox"] {
        margin-left: 0.25em;
      }


      div#id-errors {
        color: red;
        display: none;
        margin-left: 1em;
        border: thin solid red;
        width: 25em;
      }

      div#id-errors a {
        color: red;
      }

      h2, h3 {
        margin: 0;
        padding: 0;
        margin-top: 1em;
      }

      label {
      display: block;
        margin: 0;
        padding: 0;
        font-weight: normal;
      }

      fieldset,
      legend {
        padding: 0;
        margin: 0;
        margin-top: 1em;
      }

      legend {
        margin-top: 1em;
        font-weight: bold;
        font-size: 110%;
      }

      div.text,
      div.select,
      input[type="submit"] {
        margin-top: 0.5em;
      }

      span.error,
        span.noerror {
        display: inline;
      }

      span.error {
        color: red;
        border: thin solid red;
        padding: 0.25em;
      }

      span.noerror {
        color: transparent;
        border: thin solid transparent;
        padding: 0.25em;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li><code>label[for]</code> element is used to label form control.</li>
        <li>HTML5 <code>required</code> attribute to identify a form control is required.</li>
        <li><code>aria-invalid</code> attribute is used to identify a form control has an invalid value.</li>
      </ul>

      <div role="region" aria-label="Example">

        <div id="id-errors" role="region" aria-label="Error information">

        </div>

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <label for="id-name">Name</label>
            <input id="id-name"
              required="true"
              aria-invalid="false"
              type="text"
              size="30"
              onblur="checkName()"/>
            <span id="id-name-error" class="noerror" > </span>
          </div>

          <div class="text">
            <label for="id-address">Address</label>
            <input id="id-address"
              required="true"
              aria-invalid="false"
              type="text"
              size="40"
              onblur="checkAddress()"/>
            <span id="id-address-error" class="noerror" > </span>
          </div>

          <div class="text">
            <label for="id-phone">Phone</label>
            <input id="id-phone"
              required="true"
              aria-invalid="false"
              type="text"
              size="14"
              onblur="checkPhone()"/>
            <span id="id-phone-error" class="noerror"> </span>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust</legend>
            <div class="button">
              <label><input id="id-thin" name="crust" type="radio" value="Thin" required="true"/> Thin</label>
            </div>
            <div class="button">
              <label><input id="id-classic" name="crust" type="radio" value="Classic" required="true" /> Classic</label>
            </div>
            <div class="button">
              <label><input id="id-deep" name="crust" type="radio" value="Deep Dish" required="true" aria-labelledby="id-thin id-deep"/> Deep Dish</label>
            </div>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <div class="button">
              <label>
                <input id="id-sausage"
                  name="topping"
                  type="checkbox"
                  value="Sausage"/>
                Sausage
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-pepperoni"
                  name="topping"
                  type="checkbox"
                  value="Pepperoni"/>
                Pepperoni
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-mushrooms"
                  name="topping"
                  type="checkbox"
                  value="Mushrooms"/>
                Mushrooms
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-onions"
                  name="topping"
                  type="checkbox"
                  value="Onions"/>
                Onions
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-green"
                  name="topping"
                  type="checkbox"
                  value="Green Peppers"/>
                Green Peppers
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-black"
                  name="topping"
                  type="checkbox"
                  value="Black Olives"/>
                Back Olives
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-x-cheese"
                  name="topping"
                  type="checkbox"
                  value="Extra Cheese"
                  aria-labelledby="id-x-cheese id-toppings"/>
                Extra cheese
              </label>
            </div>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
          $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
          $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
          $(this).addClass('hover');
        },
        function() {
          $(this).removeClass('hover');
        });


        $('input[type="checkbox"]').focus(function() {
          $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
          $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
          $(this).addClass('hover');
        },
        function() {
          $(this).removeClass('hover');
        });


        });

        //
        // Scripting for submit button form validation

        function moveFocus(id) {
          $('#'+id).focus();
        }

        function clearErrorFeedback() {
          $('div#id-errors').empty();
          $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
          var num_errors = errors.length;

          str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

          $('div#id-errors').css('display', 'block');

          $('div#id-errors').append('&lt;h2>&lt;a id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

          var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
            var e = errors[i];
            messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
            }
            messages += "&lt;/ol>\n";
            $('div#id-errors').append(messages);

            moveFocus("id-errors-start");
          }

        //
        // Scripting for inline form validation

        function checkItem(id, flag, message) {
        var em = $('#' + id + '-error');
        $(em).empty();
        var ei = $('#' + id);

        if (flag) {
        $(ei).attr('aria-invalid', 'true');
        $(em).append(message);
        $(em).removeClass('noerror');
        $(em).addClass('error');
        }
        else {
        $(ei).attr('aria-invalid', 'false');
        $(em).addClass('noerror');
        $(em).removeClass('error');
        }
        }

        function checkName() {
        var ei = $('#id-name');
        checkItem('id-name',($(ei).val().length === 0), "Name cannot be empty!  Enter your name");
        }

        function checkAddress() {
        var ei = $('#id-address');
        checkItem('id-address',($(ei).val().length === 0), "Address cannot be empty!  Enter your address");
        }

        function checkPhone() {
        var ei = $('#id-phone');
        var phone = $(ei).val();
        if (phone.length === 0) {
        checkItem('id-phone',true, "Phone cannot be empty!  Enter your phone number");
        }
        else {
        p = "";
        for (var i = 0; i &lt; phone.length; i++) {
        var c = phone[i];
        if ((c >= "0") &amp;&amp; (c &lt;= "9")) {
        p += c;
        }
        }
        checkItem('id-phone', ((p.length !== 7) &amp;&amp; (p.length !== 10)), "Not a valid phone number, use this format (111) 222-3333");
        }
        }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>


  <slide>
    <title>Popup Error Example 2: aria-describedby reference to error message</title>

    <script src="js/submit-order.js" type="text/javascript"></script>

    <style type="text/css">
      div {
      border: solid medium transparent;
      }

      div.focus {
      border-color: black;
      background-color: #FFFFA0;
      }

      div.hover {
      border-color: black;
      background-color: #EEEEEE;
      }


      input[type="text"]:focus,
      select:focus {
      background-color: #FFFFA0;
      outline: medium solid black;
      }

      input[type="text"]:hover,
      select:hover {
      background-color: #EEEEEE;
      outline: medium solid black;
      }


      div#id-errors {
      color: red;
      display: none;
      margin-left: 1em;
      border: thin solid red;
      width: 25em;
      }

      div#id-errors a {
      color: red;
      }

      h2, h3 {
      margin: 0;
      padding: 0;
      margin-top: 1em;
      }

      label {
      display: block;
      margin: 0;
      padding: 0;
      font-weight: normal;
      }

      fieldset,
      legend {
      padding: 0;
      margin: 0;
      margin-top: 1em;
      }

      legend {
      margin-top: 1em;
      font-weight: bold;
      font-size: 110%;
      }

      div.text,
      div.select,
      input[type="submit"] {
      margin-top: 0.5em;
      }

      label.error,
      lanel.noerror {
      display: inline;
      }

      label.error {
      color: red;
      border: thin solid red;
      padding: 0.25em;
      }

      label.noerror {
      color: transparent;
      border: thin solid transparent;
      padding: 0.25em;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li><code>label[for]</code> element is used to label form control.</li>
        <li>HTML5 <code>required</code> attribute to identify a form control is required.</li>
        <li><code>aria-invalid</code> attribute is used to identify a form control has an invalid value.</li>
        <li><code>role="status"</code> is used to autmatically announce errors in form controls.</li>
        <li><code>aria-describedby</code> is used to provide a programmatic reference to the error message, so assistive technologies could render information about the error (e.g. Braille).</li>
      </ul>


      <div role="region" aria-label="Example">

        <div id="id-errors" role="region" aria-label="Error information">

        </div>

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <label for="id-name">Name</label>
            <input id="id-name"
              required="true"
              aria-invalid="false"
              type="text"
              size="30"
              aria-describedby="id-name-error"
              onblur="checkName()"/>
            <label id="id-name-error" for="id-name" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-address">Address</label>
            <input id="id-address"
              required="true"
              aria-invalid="false"
              type="text"
              size="40"
              aria-describedby="id-address-error"
              onblur="checkAddress()"/>
            <label id="id-address-error" for="id-address" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-phone">Phone</label>
            <input id="id-phone"
              required="true"
              aria-invalid="false"
              type="text"
              size="14"
              aria-describedby="id-phone-error"
              onblur="checkPhone()"/>
            <label id="id-phone-error" for="id-phone" class="noerror" role="status"> </label>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust</legend>
            <div class="button">
              <label><input id="id-thin" name="crust" type="radio" value="Thin" required="true"/> Thin</label>
            </div>
            <div class="button">
              <label><input id="id-classic" name="crust" type="radio" value="Classic" required="true" /> Classic</label>
            </div>
            <div class="button">
              <label><input id="id-deep" name="crust" type="radio" value="Deep Dish" required="true" aria-labelledby="id-thin id-deep"/> Deep Dish</label>
            </div>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <div class="button">
              <label>
                <input id="id-sausage"
                  name="topping"
                  type="checkbox"
                  value="Sausage"/>
                Sausage
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-pepperoni"
                  name="topping"
                  type="checkbox"
                  value="Pepperoni"/>
                Pepperoni
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-mushrooms"
                  name="topping"
                  type="checkbox"
                  value="Mushrooms"/>
                Mushrooms
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-onions"
                  name="topping"
                  type="checkbox"
                  value="Onions"/>
                Onions
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-green"
                  name="topping"
                  type="checkbox"
                  value="Green Peppers"/>
                Green Peppers
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-black"
                  name="topping"
                  type="checkbox"
                  value="Black Olives"/>
                Back Olives
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-x-cheese"
                  name="topping"
                  type="checkbox"
                  value="Extra Cheese"
                  aria-labelledby="id-x-cheese id-toppings"/>
                Extra cheese
              </label>
            </div>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        $('input[type="checkbox"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        });

        //
        // Scripting for submit button form validation

        function moveFocus(id) {
        $('#'+id).focus();
        }

        function clearErrorFeedback() {
        $('div#id-errors').empty();
        $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
        var num_errors = errors.length;

        str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

        $('div#id-errors').css('display', 'block');

        $('div#id-errors').append('&lt;h2>&lt;a id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

        var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
          var e = errors[i];
          messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
          }
          messages += "&lt;/ol>\n";
          $('div#id-errors').append(messages);

          moveFocus("id-errors-start");
          }

        //
        // Scripting for inline form validation

        function checkItem(id, flag, message) {
        var em = $('#' + id + '-error');
        $(em).empty();
        var ei = $('#' + id);

        if (flag) {
        $(ei).attr('aria-invalid', 'true');
        $(em).append(message);
        $(em).removeClass('noerror');
        $(em).addClass('error');
        }
        else {
        $(ei).attr('aria-invalid', 'false');
        $(em).addClass('noerror');
        $(em).removeClass('error');
        }
        }

        function checkName() {
        var ei = $('#id-name');
        checkItem('id-name',($(ei).val().length === 0), "Name cannot be empty!  Enter your name");
        }

        function checkAddress() {
        var ei = $('#id-address');
        checkItem('id-address',($(ei).val().length === 0), "Address cannot be empty!  Enter your address");
        }

        function checkPhone() {
        var ei = $('#id-phone');
        var phone = $(ei).val();
        if (phone.length === 0) {
        checkItem('id-phone',true, "Phone cannot be empty!  Enter your phone number");
        }
        else {
        p = "";
        for (var i = 0; i &lt; phone.length; i++) {
        var c = phone[i];
        if ((c >= "0") &amp;&amp; (c &lt;= "9")) {
        p += c;
        }
        }
        checkItem('id-phone', ((p.length !== 7) &amp;&amp; (p.length !== 10)), "Not a valid phone number, use this format (111) 222-3333");
        }
        }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Popup Error Example 3: title attribute used for error message</title>

    <script src="js/submit-order.js" type="text/javascript"></script>

    <style type="text/css">
      div {
      border: solid medium transparent;
      }

      div.focus {
      border-color: black;
      background-color: #FFFFA0;
      }

      div.hover {
      border-color: black;
      background-color: #EEEEEE;
      }


      input[type="text"]:focus,
      select:focus {
      background-color: #FFFFA0;
      outline: medium solid black;
      }

      input[type="text"]:hover,
      select:hover {
      background-color: #EEEEEE;
      outline: medium solid black;
      }


      div#id-errors {
      color: red;
      display: none;
      margin-left: 1em;
      border: thin solid red;
      width: 25em;
      }

      div#id-errors a {
      color: red;
      }

      h2, h3 {
      margin: 0;
      padding: 0;
      margin-top: 1em;
      }

      label {
      display: block;
      margin: 0;
      padding: 0;
      font-weight: normal;
      }

      fieldset,
      legend {
      padding: 0;
      margin: 0;
      margin-top: 1em;
      }

      legend {
      margin-top: 1em;
      font-weight: bold;
      font-size: 110%;
      }

      div.text,
      div.select,
      input[type="submit"] {
      margin-top: 0.5em;
      }

      label.error,
      lanel.noerror {
      display: inline;
      }

      label.error {
      color: red;
      border: thin solid red;
      padding: 0.25em;
      }

      label.noerror {
      color: transparent;
      border: thin solid transparent;
      padding: 0.25em;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li><code>label[for]</code> element is used to label form control.</li>
        <li>HTML5 <code>required</code> attribute to identify a form control is required.</li>
        <li><code>aria-invalid</code> attribute is used to identify a form control has an invalid value.</li>
        <li><code>role="status"</code> attribute is used to autmatically announce errors in form controls.</li>
        <li><code>title</code> attribute is used to provide an accessible description of the error message, so assistive technologies could render information about the error (e.g. Braille).</li>
      </ul>


      <div role="region" aria-label="Example">

        <div id="id-errors" role="region" aria-label="Error information">

        </div>

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <label for="id-name">Name</label>
            <input id="id-name"
              required="true"
              aria-invalid="false"
              type="text"
              size="30"
              title=""
              onblur="checkName()"/>
            <label id="id-name-error" for="id-name" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-address">Address</label>
            <input id="id-address"
              required="true"
              aria-invalid="false"
              type="text"
              size="40"
              title=""
              onblur="checkAddress()"/>
            <label id="id-address-error" for="id-address" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-phone">Phone</label>
            <input id="id-phone"
              required="true"
              aria-invalid="false"
              type="text"
              size="14"
              title=""
              onblur="checkPhone()"/>
            <label id="id-phone-error" for="id-phone" class="noerror" role="status"> </label>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust</legend>
            <div class="button">
              <label><input id="id-thin" name="crust" type="radio" value="Thin" required="true"/> Thin</label>
            </div>
            <div class="button">
              <label><input id="id-classic" name="crust" type="radio" value="Classic" required="true" /> Classic</label>
            </div>
            <div class="button">
              <label><input id="id-deep" name="crust" type="radio" value="Deep Dish" required="true" aria-labelledby="id-thin id-deep"/> Deep Dish</label>
            </div>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <div class="button">
              <label>
                <input id="id-sausage"
                  name="topping"
                  type="checkbox"
                  value="Sausage"/>
                Sausage
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-pepperoni"
                  name="topping"
                  type="checkbox"
                  value="Pepperoni"/>
                Pepperoni
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-mushrooms"
                  name="topping"
                  type="checkbox"
                  value="Mushrooms"/>
                Mushrooms
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-onions"
                  name="topping"
                  type="checkbox"
                  value="Onions"/>
                Onions
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-green"
                  name="topping"
                  type="checkbox"
                  value="Green Peppers"/>
                Green Peppers
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-black"
                  name="topping"
                  type="checkbox"
                  value="Black Olives"/>
                Back Olives
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-x-cheese"
                  name="topping"
                  type="checkbox"
                  value="Extra Cheese"
                  aria-labelledby="id-x-cheese id-toppings"/>
                Extra cheese
              </label>
            </div>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        $('input[type="checkbox"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        });

        //
        // Scripting for submit button form validation

        function moveFocus(id) {
        $('#'+id).focus();
        }

        function clearErrorFeedback() {
        $('div#id-errors').empty();
        $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
        var num_errors = errors.length;

        str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

        $('div#id-errors').css('display', 'block');

        $('div#id-errors').append('&lt;h2>&lt;a id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

        var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
          var e = errors[i];
          messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
          }
          messages += "&lt;/ol>\n";
          $('div#id-errors').append(messages);

          moveFocus("id-errors-start");
          }

        //
        // Scripting for inline form validation

        function checkItem(id, flag, message) {
        var em = $('#' + id + '-error');
        $(em).empty();
        var ei = $('#' + id);

        if (flag) {
        $(ei).attr('aria-invalid', 'true');
        $(ei).attr('title', message);
        $(em).append(message);
        $(em).removeClass('noerror');
        $(em).addClass('error');
        }
        else {
        $(ei).attr('aria-invalid', 'false');
        $(ei).attr('title', '');
        $(em).addClass('noerror');
        $(em).removeClass('error');
        }
        }

        function checkName() {
        var ei = $('#id-name');
        checkItem('id-name',($(ei).val().length === 0), "Name cannot be empty!  Enter your name");
        }

        function checkAddress() {
        var ei = $('#id-address');
        checkItem('id-address',($(ei).val().length === 0), "Address cannot be empty!  Enter your address");
        }

        function checkPhone() {
        var ei = $('#id-phone');
        var phone = $(ei).val();
        if (phone.length === 0) {
        checkItem('id-phone',true, "Phone cannot be empty!  Enter your phone number");
        }
        else {
        p = "";
        for (var i = 0; i &lt; phone.length; i++) {
        var c = phone[i];
        if ((c >= "0") &amp;&amp; (c &lt;= "9")) {
        p += c;
        }
        }
        checkItem('id-phone', ((p.length !== 7) &amp;&amp; (p.length !== 10)), "Not a valid phone number, use this format (111) 222-3333");
        }
        }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Popup Error Example 4: aria-labelledby attribute used for error message</title>

    <script src="js/submit-order.js" type="text/javascript"></script>

    <style type="text/css">
      div {
      border: solid medium transparent;
      }

      div.focus {
      border-color: black;
      background-color: #FFFFA0;
      }

      div.hover {
      border-color: black;
      background-color: #EEEEEE;
      }


      input[type="text"]:focus,
      select:focus {
      background-color: #FFFFA0;
      outline: medium solid black;
      }

      input[type="text"]:hover,
      select:hover {
      background-color: #EEEEEE;
      outline: medium solid black;
      }


      div#id-errors {
      color: red;
      display: none;
      margin-left: 1em;
      border: thin solid red;
      width: 25em;
      }

      div#id-errors a {
      color: red;
      }

      h2, h3 {
      margin: 0;
      padding: 0;
      margin-top: 1em;
      }

      div.text,
      div.select,
      div.group,
      input[type="submit"] {
      margin-top: 0.5em;
      }

      div.group {
      width: 20em;
      }

      div.group div.title {
      font-weight: bold;
      }

      span.error {
      color: red;
      border: thin solid red;
      padding: 0.25em;
      }

      span.noerror {
      color: transparent;
      border: thin solid transparent;
      padding: 0.25em;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li><code>aria-labelledby</code> attribute is used to label form control and includes element with error message.</li>
        <li>HTML5 <code>required</code> attribute to identify a form control is required.</li>
        <li><code>aria-invalid</code> attribute is used to identify a form control has an invalid value.</li>
        <li><code>role="status"</code> is used to autmatically announce errors in form controls.</li>
      </ul>

      <div role="region" aria-label="Example">

        <div id="id-errors" role="region" aria-label="Error information">

        </div>

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <div id="id-name-label">Name</div>
            <input id="id-name"
              required="true"
              aria-invalid="false"
              type="text"
              size="30"
              aria-labelledby="id-name-label id-name-error"
              onblur="checkName()"/>
            <span id="id-name-error" class="noerror" role="status"> </span>
          </div>

          <div class="text">
            <div id="id-address-label">Address</div>
            <input id="id-address"
              aria-required="true"
              aria-invalid="false"
              type="text"
              size="40"
              aria-labelledby="id-address-label id-address-error"
              onblur="checkAddress()"/>
            <span id="id-address-error" class="noerror" role="status"> </span>
          </div>

          <div class="text">
            <div id="id-phone-label">Phone</div>
            <input id="id-phone"
              aria-required="true"
              aria-invalid="false"
              type="text"
              size="14"
              aria-labelledby="id-phone-label id-phone-error"
              onblur="checkPhone()"/>
            <span id="id-phone-error" class="noerror" role="status"> </span>
          </div>

          <div class="select">
            <div id="id-delivery-label">Delivery Method</div>
            <select id="id-delivery" aria-labelledby="id-delivery-label">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <div class="group">
            <div id="id-crust" class="title">Crust</div>
            <div class="button">
              <input id="id-thin" name="crust" type="radio" value="Thin" aria-required="true" aria-labelledby="id-thin id-crust"/> Thin
            </div>
            <div class="button">
              <input id="id-classic" name="crust" type="radio" value="Classic" aria-required="true" aria-labelledby="id-thin id-classic"/> Classic
            </div>
            <div class="button">
              <input id="id-deep" name="crust" type="radio" value="Deep Dish" aria-required="true" aria-labelledby="id-thin id-deep"/> Deep Dish
            </div>
          </div>

          <div class="group">
            <div id="id-toppings" class="title">Toppings</div>
            <div class="button">
              <input id="id-sausage"
                name="topping"
                type="checkbox"
                value="Sausage"
                aria-labelledby="id-sausage id-toppings"
                aria-describedby="id-special"/>
                Sausage
            </div>
            <div class="button">
              <input id="id-pepperoni"
                name="topping"
                type="checkbox"
                value="Pepperoni"
                aria-labelledby="id-pepperoni id-toppings"/>
                Pepperoni
            </div>
            <div class="button">
              <input id="id-mushrooms"
                name="topping"
                type="checkbox"
                value="Mushrooms"
                aria-labelledby="id-mushrooms id-toppings"/>
                Mushrooms
            </div>
            <div class="button">
              <input id="id-onions"
                name="topping"
                type="checkbox"
                value="Onions"
                aria-labelledby="id-onions id-toppings"/>
                Onions
            </div>
            <div class="button">
              <input id="id-green"
                name="topping"
                type="checkbox"
                value="Green Peppers"
                aria-labelledby="id-green id-toppings"/>
                Green Peppers
            </div>
            <div class="button">
              <input id="id-black"
                name="topping"
                type="checkbox"
                value="Black Olives"
                aria-labelledby="id-black id-toppings"/>
                Back Olives
            </div>
            <div class="button">
              <input id="id-x-cheese"
                name="topping"
                type="checkbox"
                value="Extra Cheese"
                aria-labelledby="id-x-cheese id-toppings"/>
                Extra cheese
            </div>
          </div>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        $('input[type="checkbox"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        });

        //
        // Scripting for submit button form validation

        function moveFocus(id) {
        $('#'+id).focus();
        }

        function clearErrorFeedback() {
        $('div#id-errors').empty();
        $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
        var num_errors = errors.length;

        str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

        $('div#id-errors').css('display', 'block');

        $('div#id-errors').append('&lt;h2>&lt;a id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

        var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
          var e = errors[i];
          messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
          }
          messages += "&lt;/ol>\n";
          $('div#id-errors').append(messages);

          moveFocus("id-errors-start");
          }

        //
        // Scripting for inline form validation

        function checkItem(id, flag, message) {
        var em = $('#' + id + '-error');
        $(em).empty();
        var ei = $('#' + id);

        if (flag) {
        $(ei).attr('aria-invalid', 'true');
        $(em).append(message);
        $(em).removeClass('noerror');
        $(em).addClass('error');
        }
        else {
        $(ei).attr('aria-invalid', 'false');
        $(em).addClass('noerror');
        $(em).removeClass('error');
        }
        }

        function checkName() {
        var ei = $('#id-name');
        checkItem('id-name',($(ei).val().length === 0), "Name cannot be empty!  Enter your name");
        }

        function checkAddress() {
        var ei = $('#id-address');
        checkItem('id-address',($(ei).val().length === 0), "Address cannot be empty!  Enter your address");
        }

        function checkPhone() {
        var ei = $('#id-phone');
        var phone = $(ei).val();
        if (phone.length === 0) {
        checkItem('id-phone',true, "Phone cannot be empty!  Enter your phone number");
        }
        else {
        p = "";
        for (var i = 0; i &lt; phone.length; i++) {
        var c = phone[i];
        if ((c >= "0") &amp;&amp; (c &lt;= "9")) {
        p += c;
        }
        }
        checkItem('id-phone', ((p.length !== 7) &amp;&amp; (p.length !== 10)), "Not a valid phone number, use this format (111) 222-3333");
        }
        }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

 <slide>
    <title>Popup Error Example 5: aria-label attribute used for error message</title>

    <script src="js/submit-order.js" type="text/javascript"></script>

    <style type="text/css">
      div {
      border: solid medium transparent;
      }

      div.focus {
      border-color: black;
      background-color: #FFFFA0;
      }

      div.hover {
      border-color: black;
      background-color: #EEEEEE;
      }


      input[type="text"]:focus,
      select:focus {
      background-color: #FFFFA0;
      outline: medium solid black;
      }

      input[type="text"]:hover,
      select:hover {
      background-color: #EEEEEE;
      outline: medium solid black;
      }


      div#id-errors {
      color: red;
      display: none;
      margin-left: 1em;
      border: thin solid red;
      width: 25em;
      }

      div#id-errors a {
      color: red;
      }

      h2, h3 {
      margin: 0;
      padding: 0;
      margin-top: 1em;
      }

      label {
      display: block;
      margin: 0;
      padding: 0;
      font-weight: normal;
      }

      fieldset,
      legend {
      padding: 0;
      margin: 0;
      margin-top: 1em;
      }

      legend {
      margin-top: 1em;
      font-weight: bold;
      font-size: 110%;
      }

      div.text,
      div.select,
      input[type="submit"] {
      margin-top: 0.5em;
      }


      label.error,
      lanel.noerror {
      display: inline;
      }

      label.error {
      color: red;
      border: thin solid red;
      padding: 0.25em;
      }

      label.noerror {
      color: transparent;
      border: thin solid transparent;
      padding: 0.25em;
      }

    </style>

    <contents>

      <h2>Features</h2>
      <ul>
        <li><code>label[for]</code> elements provide initial labels for form contorls.</li>
        <li><code>aria-label</code> attribute changes the label for a form control when it has an error.</li>
        <li>HTML5 <code>required</code> attribute to identify a form control is required.</li>
        <li><code>aria-invalid</code> attribute is used to identify a form control has an invalid value.</li>
        <li><code>role="status"</code> is used to autmatically announce errors in form controls.</li>
      </ul>

      <div role="region" aria-label="Example">

        <form id="form">
          <h2>Pizza Order Form</h2>

          <div class="text">
            <label for="id-name">Name</label>
            <input id="id-name"
              required="true"
              aria-invalid="false"
              type="text"
              size="30"
              onblur="checkName()"/>
            <label id="id-name-error" for="id-name" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-address">Address</label>
            <input id="id-address"
              required="true"
              aria-invalid="false"
              type="text"
              size="40"
              onblur="checkAddress()"/>
            <label id="id-address-error" for="id-address" class="noerror" role="status"> </label>
          </div>

          <div class="text">
            <label for="id-phone">Phone</label>
            <input id="id-phone"
              required="true"
              aria-invalid="false"
              type="text"
              size="14"
              onblur="checkPhone()"/>
            <label id="id-phone-error" for="id-phone" class="noerror" role="status"> </label>
          </div>

          <div class="select">
            <label for="id-delivery">Delivery Method</label>
            <select id="id-delivery">
              <option>Eat in store</option>
              <option>Pickup</option>
              <option>Home delivery</option>
            </select>
          </div>

          <fieldset>
            <legend>Crust</legend>
            <div class="button">
              <label><input id="id-thin" name="crust" type="radio" value="Thin" required="true"/> Thin</label>
            </div>
            <div class="button">
              <label><input id="id-classic" name="crust" type="radio" value="Classic" required="true" /> Classic</label>
            </div>
            <div class="button">
              <label><input id="id-deep" name="crust" type="radio" value="Deep Dish" required="true" aria-labelledby="id-thin id-deep"/> Deep Dish</label>
            </div>
          </fieldset>

          <fieldset>
            <legend>Toppings</legend>
            <div class="button">
              <label>
                <input id="id-sausage"
                  name="topping"
                  type="checkbox"
                  value="Sausage"/>
                Sausage
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-pepperoni"
                  name="topping"
                  type="checkbox"
                  value="Pepperoni"/>
                Pepperoni
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-mushrooms"
                  name="topping"
                  type="checkbox"
                  value="Mushrooms"/>
                Mushrooms
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-onions"
                  name="topping"
                  type="checkbox"
                  value="Onions"/>
                Onions
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-green"
                  name="topping"
                  type="checkbox"
                  value="Green Peppers"/>
                Green Peppers
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-black"
                  name="topping"
                  type="checkbox"
                  value="Black Olives"/>
                Back Olives
              </label>
            </div>
            <div class="button">
              <label>
                <input id="id-x-cheese"
                  name="topping"
                  type="checkbox"
                  value="Extra Cheese"
                  aria-labelledby="id-x-cheese id-toppings"/>
                Extra cheese
              </label>
            </div>
          </fieldset>

          <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

        </form>

        <div id="order">

        </div>

      </div>

      <script id="script" type="text/javascript">

        // Focus styling code

        $(document).ready( function() {

        $('input[type="radio"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="radio"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="radio"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        $('input[type="checkbox"]').focus(function() {
        $(this).parent().addClass('focus');
        });

        $('input[type="checkbox"]').blur(function() {
        $(this).parent().removeClass('focus');
        });

        $('input[type="checkbox"]').parent().hover(function() {
        $(this).addClass('hover');
        },
        function() {
        $(this).removeClass('hover');
        });


        });

        //
        // Scripting for submit button form validation

        function moveFocus(id) {
        $('#'+id).focus();
        }

        function clearErrorFeedback() {
        $('div#id-errors').empty();
        $('div#id-errors').css('display', 'none');
        }

        function exampleErrorFeedback(errors) {
        var num_errors = errors.length;

        str = (num_errors === 1 ? "1 Error\n" : num_errors + " Errors\n");

        $('div#id-errors').css('display', 'block');

        $('div#id-errors').append('&lt;h2>&lt;a id="id-errors-start">&lt;/a>' + str + '&lt;/h2>');

        var messages = "&lt;ol>\n";

          for (var i = 0; i &lt; num_errors; i++) {
          var e = errors[i];
          messages += '&lt;li>&lt;a href="#' + e.id + '" onclick="moveFocus(\'' + e.id + '\')">' + e.message + '&lt;/a>&lt;/li>\n';
          }
          messages += "&lt;/ol>\n";
          $('div#id-errors').append(messages);

          moveFocus("id-errors-start");
          }

        //
        // Scripting for inline form validation

        function checkItem(id, flag, message) {
        var em = $('#' + id + '-error');
        $(em).empty();
        var ei = $('#' + id);

        if (flag) {
        $(ei).attr('aria-invalid', 'true');
        $(ei).attr('aria-label', message);
        $(em).append(message);
        $(em).removeClass('noerror');
        $(em).addClass('error');
        }
        else {
        $(ei).attr('aria-invalid', 'false');
        $(ei).removeAttr('aria-label');
        $(em).addClass('noerror');
        $(em).removeClass('error');
        }
        }

        function checkName() {
        var ei = $('#id-name');
        checkItem('id-name',($(ei).val().length === 0), "Name cannot be empty!  Enter your name");
        }

        function checkAddress() {
        var ei = $('#id-address');
        checkItem('id-address',($(ei).val().length === 0), "Address cannot be empty!  Enter your address");
        }

        function checkPhone() {
        var ei = $('#id-phone');
        var phone = $(ei).val();
        if (phone.length === 0) {
        checkItem('id-phone',true, "Phone cannot be empty!  Enter your phone number");
        }
        else {
        p = "";
        for (var i = 0; i &lt; phone.length; i++) {
        var c = phone[i];
        if ((c >= "0") &amp;&amp; (c &lt;= "9")) {
        p += c;
        }
        }
        checkItem('id-phone', ((p.length !== 7) &amp;&amp; (p.length !== 10)), "Not a valid phone number, use this format (111) 222-3333");
        }
        }

      </script>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>

      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>

  <slide>
    <title>Badging Requirements</title>
    <contents>
      <ol>
        <li>Complete form control quiz in <a href="https://compass2g.illinois.edu" target="_compass">Compass2g</a></li>
        <li><a href="https://webedit.disability.illinois.edu/user/jongund/form-labeling/copy/" target="_webedit">Add form control labels in Problem 1</a></li>
        <li><a href="https://webedit.disability.illinois.edu/user/jongund/form-fieldset/copy/" target="_webedit">Add grouping label form controls in Problem 2</a></li>
      </ol>
    </contents>
  </slide>

</slides>



<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="funct.css" type="text/css"?>
<?xm-well_formed path="funct.dtd"?>
<slides>
  <lang>en</lang>
  <title>Understanding ARIA 1.1 and the ARIA Authoring Practices Guide</title>
  <name>Jon Gunderson</name>

  <desc href="http://disability.illinois.edu">Division of Disability Resources and Educational Services</desc>
  <desc href="http://ahs.illinois.edu">College of Applied Health Sciences</desc>
  <desc href="http://illinois.edu">University of Illinois</desc>
  <desc href="mailto:jongund@illinois.edu">jongund@illinois.edu</desc>
  <desc href="../">Presentations</desc>
  <desc>September 8, 2018</desc>
  <desc href="https://www.a11ycampchi.org/">Accessibility Camp Chicago 2018</desc>

  <stylesheet media="screen">../../common/css/bootstrap.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-theme.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-accessibility.css</stylesheet>
  <stylesheet media="screen">../../common/css/xml-slides.css</stylesheet>
  <script>../../common/js/jquery-2.1.1.min.js</script>
  <script>../../common/js/bootstrap.min.js</script>
  <script>../../common/js/bootstrap-accessibility.min.js</script>
  <script>../../common/js/xml-slides.js</script>

  <slide>
    <title>Overview</title>
    <contents>
      <ul>
        <li>Brief History of ARIA </li>
        <li>Section 2: Read Me First</li>
        <li>Section 3: Design Patterns and Widgets</li>
        <li>Section 4: Landmark Regions</li>
        <li>Section 5: Developing a Keyboard Interface</li>
        <li>Section 7. Intentionally Hiding Semantics with the presentation Role</li>
        <li>Open Source Tools and Training from Illinois</li>
      </ul>
      <script type="text/javascript">
        slideShowURL()
      </script>
    </contents>
  </slide>

  <slide>
    <title>The Problem of Custom Wigets</title>
    <contents>
      <h2>Problem</h2>
      <ul>
        <li>Starting in 2000 people started using HTML+CSS+Javascript to create <em>custom widgets</em> (e.g. interactive controls) for web pages.</li>
        <li>There was no standard and interoperable way to make these <em>custom widgets</em> accessible.</li>
      </ul>

      <h2>Issues</h2>
      <ul>
        <li>Keyboard support.</li>
        <li>Describing the widget behavior (e.g. role).</li>
        <li>Labeling the features of the widget (e.g. accessible name).</li>
        <li>Identifying properties and states. (e.g. checked, exapnded, has popup)</li>
        <li>Communicating information through platform specific accessibility APIs.</li>
        <li>Interoperability between browser and accessibility APIs.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>ARIA Basics</title>
    <contents>
      <table class="table table-striped">
        <thead>
          <tr>
            <th>Feature</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Role</th>
            <td>
              <ul>
                <li>Describes the type of widget.</li>
                <li>Implies the <em>keyboard interaction</em>.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Properties and States</th>
            <td>
              <ul>
                <li>Describing features like "expandable", checked" or "selected".</li>
                <li>Example: <br/><code>&lt;div role="slider" aria-valuemin="0" aria-valuemax="100" aria-valuenow="10"</code>.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Name</th>
            <td>
              <ul>
                <li><em>Accessible Name</em> provides a label identifying the function of the widget.</li>
                <li>Example: <br/><code>&lt;div role="slider" aria-label="Maximum Price"</code>.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Description</th>
            <td>
              <ul>
                <li><em>Accessible Description</em> provides additional information about a widget including instructions and error messages.</li>
                <li>Example: <br/><code>&lt;label>Name: &lt;input type="text" aria-invalid="true" aria-describedby="errorID">&lt;/label>
                <br/><br/>&lt;span id="errorID">Name cannot be empty&lt;/span></code>.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Relationships</th>
            <td>How components relate to each other (e.g. controls, owns)</td>
          </tr>
          <tr>
            <th>Grouping</th>
            <td>Groups of related components (e.g. lists, menus, trees, tab panels).</td>
          </tr>
          <tr>
            <th>Language</th>
            <td>
              <ul>
                <li>Roles, properties and states can be translated by the operating systems and assistive technologies to local languages.</li>
                <li>No ARIA: <br/><code>&lt;div class="sr-only">slider value is 10</code>..<br/></li>
                <li>Using ARIA: <br/><code>&lt;div role="slider" aria-value="10"</code>..<br/></li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Standardization</th>
            <td>Mappings to accessibility APIs:
            <ul>
              <li>ATK/AT-SPI (Linux/Unix)</li>
              <li>Microsoft Active Accessibility (MSAA) + IAccessible2</li>
              <li>Microsoft UI Automate</li>
              <li>MacOS Accessibility API</li>
            </ul>
          </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>ARIA Contract with Browsers and Assistive Technologies</title>
    <contents>
      <h2>Browsers</h2>
      <ul>
        <li>The use of ARIA markup does not affect browser behavior or rendering.</li>
        <li>ARIA only affects how information is represented in accessibility APIs (e.g. MSAA+IAccessible2, ATK+SPI, UIAutomate, MacOS).</li>
      </ul>

      <h2>Asssitive Technologies</h2>
      <ul>
        <li>Do not specify what assistive technologies will do with the information.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Section 2: Read Me First</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#read_me_first" target="_video">Section 2. Read Me First</a></li>
        <li>No ARIA is better than bad ARIA:
          <ul>
            <li>Principle 1: A role is a promise (<a href="https://www.youtube.com/watch?v=HV8iB6nX5dM">Video: Accessibility in the Real World by Karl "The Viking" Groves and Billy "The Lumberjack" Gregory</a>).</li>
            <li>Principle 2: ARIA Can Both Cloak and Enhance, Creating Both Power and Danger.</li>
          </ul>
        </li>
        <li>Browser and assistive technology support in examples:
          <ul>
            <li>Illustrate appropriate use of ARIA 1.1.</li>
            <li>Testing is required if specific technologies need to be supported (e.g. legacy technologies).</li>
          </ul>
        </li>
        <li>Mobile and touch support in examples:
          <ul>
            <li>There is limited information on interoperability for mobile browsers.</li>
            <li>Future goal of the guide.</li>
          </ul>
        </li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_ex" width="98%" height="600px"></iframe>
    </contents>
  </slide>

 <slide>
   <title>Section 4: Landmark Regions</title>
   <contents>
     <ul style="margin-bottom: 2em">
       <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_landmark">ARIA Authoring Practices: Landmark Regions</a>.</li>
       <li>HTML5 Sectioning Elements (e.g. <code>header</code>, <code>main</code>, <code>nav</code>, <code>aside</code>, <code>section</code> and <code>footer</code>) have default landmark roles.</li>
       <li>Step 1: Identify the logical structure.</li>
       <li>Step 2: Assign landmark roles to each area.</li>
       <li>Step 3: Label areas.</li>
     </ul>
     <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_landmark" width="98%" height="600px"></iframe>
   </contents>
 </slide>

  <slide>
    <title>Landmarks Example</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/examples/landmarks/">ARIA Authoring Practices Landmark Example</a></li>
        <li>Uses landmark in design.</li>
        <li>Landmark visualization feature.</li>
        <li>Links to related resources.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/examples/landmarks/" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 3.15: Menu Button</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton">ARIA Authoring Practices: Menu Button</a></li>
        <li>Description of example.</li>
        <li>Links to related examples.</li>
        <li>Working example.</li>
        <li>Keyboard interaction.</li>
        <li>Use of roles properties and states.</li>
        <li>Source code.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5: Developing a Keyboard Interface</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard">ARIA Authoring Practices: Developing a Keyboard Interface</a></li>
        <li>This is often the least understood part of using ARIA technology.</li>
        <li>What is the keyboard interaction model and which ARIA widget roles are compatible with that model.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.1: Fundamental Keyboard Navigation Conventions</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav">ARIA Authoring Practices: Fundamental Keyboard Navigation Conventions</a></li>
        <li>Keyboard interaction model for each widget role.</li>
        <li>Example: <a href="https://education.illinois.edu/">College of Education Mega Menu</a></li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.2: Discernible and Predictable Keyboard Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_discernable_predictable">ARIA Authoring Practices: Discernible and Predictable Keyboard Focus</a></li>
        <li>Many users with disabilities can see the display, but need to identify the elements with keyboard focus and/or selections.</li>
        <li>Keyboard interaction is often difficult or impossible if users cannot identify what element has keyboard focus.</li>
        <li>Need more than just color, so the use of borders, underline or visual icons is important.</li>
        <li>Poor Example: <a href="https://krannertcenter.com/">Krannert Performing Arts Center</a></li>
        <li>Better Example: <a href="https://slack.com/">Slack</a></li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_discernable_predictable" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.3: Focus vs. Selection and the Perception of Dual Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_vs_selection">ARIA Authoring Practices: Focus vs. Selection and the Perception of Dual Focus</a></li>
        <li>Making the styling of keyboard focus and selection different is important.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_vs_selection" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.4: Deciding When to Make Selection Automatically Follow Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_selection_follows_focus">ARIA Authoring Practices: Deciding When to Make Selection Automatically Follow Focus</a></li>
        <li>When content is loaded basd on user interaction there can sometimes be delays in content being available, make sure the affects of these delays are minimized for keyboard users.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_selection_follows_focus" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Section 5.5: Keyboard Navigation Between Components (The Tab Sequence)</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_between">ARIA Authoring Practices: Keyboard Navigation Between Components (The Tab Sequence)</a></li>
        <li>The use of <code>tabindex=-1</code> and <code>tabindex=0</code> to define interactive elements and tab order of content of the page.</li>
        <li><code>tabindex</code> values > 0 are discouraged, and should only be used cautiously.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_between" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Section 5.6: Keyboard Navigation Inside Components</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_within">ARIA Authoring Practices: Keyboard Navigation Inside Components</a></li>
        <li>Roving <code>tabindex</code> versus <code>aria-activedescendant</code> technique for identifying element with current focus.</li>
        <li>Call <code>focus()</code> on elements with focus.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_within" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.7: Focusability of Disabled Controls</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_disabled_controls">ARIA Authoring Practices: Focusability of disabled controls</a></li>
        <li>When to keep or remove keyboard interaction to disabled controls.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_disabled_controls" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.8: Key Assignment Conventions for Common Functions</title>
    <contents>
        <p><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_common_conventions">ARIA Authoring Practices: Key Assignment Conventions for Common Functions</a></p>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_common_conventions" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 5.9: Keyboard Shortcuts</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_shortcuts">ARIA Authoring Practices: Keyboard Shortcuts</a></li>
        <li>Keyboard shortcuts should enhance, not replace, standard keyboard access.</li>
        <li>Effectively choosing from among the following behaviors:</li>
          <ul>
            <li>Navigation: Moving focus to an element.</li>
            <li>Activation: Performing an operation associated with an element that does not have focus and might not be visible.</li>
            <li>Navigation and activation: Both moving focus to an element and activating it.</li>
          </ul>
        <li>Balancing efficiency and cognitive load:
          <ul>
            <li>Lack of a shortcut reduces efficiency</li>
            <li>Too many shortcuts increases cognitive load to remember.</li>
          </ul>
        </li>
      </ul>

      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_shortcuts" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 7: Intentionally Hiding Semantics with the Presentation Role</title>
    <contents>
      <p><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#presentation_role">Section 6: Intentionally Hiding Semantics with the presentation Role </a></p>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#presentation_role" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 8. Roles That Automatically Hide Semantics by Making Their Descendants Presentational</title>
    <contents>
      <p><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#children_presentational">Section 7. Roles That Automatically Hide Semantics by Making Their Descendants Presentational</a></p>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#children_presentational" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Accessible Name and Description: Computation and API Mappings 1.1</title>
    <contents>
      <p><a href="https://www.w3.org/TR/accname-aam-1.1/">Accessible Name and Description: Computation and API Mappings 1.1</a></p>
      <iframe src="https://www.w3.org/TR/accname-aam-1.1/ " width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Open Source Tools and Training</title>
    <contents>
      <ul>
        <li><a href="https://fae.disability.illinois.edu">Functional Accessibility Evaluator 2.0</a></li>
        <li><a href="https://accessibility-bookmarklets.org/">Accessibility Bookmarklets</a></li>
        <li><a href="http://iadp.ahs.illinois.edu/">Information Accessibility Design and Policy Certificate</a></li>
        <li><a href="http://go.illinois.edu/a11y-badges">Web Accessibility Badging Courses using HTML5 and ARIA Authoring Practices</a></li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Questions and Discussion</title>
    <contents>
    </contents>
  </slide>

</slides>



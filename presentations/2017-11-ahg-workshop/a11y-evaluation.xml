<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="funct.css" type="text/css"?>
<?xm-well_formed path="funct.dtd"?>
<slides>
  <lang>en</lang>
  <title>Web Accessibility Evaluation and the use of Web Standards</title>
  <person>
    <name>Jon Gunderson, Ph.D.</name>
    <desc href="http://illinois.edu">University of Illinois at Urbana-Champaign</desc>
    <desc href="mailto:jongund@illinois.edu">jongund@illinois.edu</desc>
  </person>
  <conference>
    <name href="http://accessinghigherground.org/">Accessing Higher Ground November: Accessible Media, Web and Technology Conference</name>
    <desc>November 15th, 2017</desc>
  </conference>

  <desc href="../">Presentations</desc>

  <stylesheet media="screen">../../common/css/bootstrap.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-theme.min.css</stylesheet>
  <stylesheet media="screen">../../common/css/bootstrap-accessibility.css</stylesheet>

  <stylesheet media="screen">../../common/css/xml-slides.css</stylesheet>

  <script>../../common/js/jquery-2.1.1.min.js</script>
  <script>../../common/js/bootstrap.min.js</script>
  <script>../../common/js/bootstrap-accessibility.min.js</script>
  <script>../../common/js/xml-slides.js</script>

  <slide>
    <title>Overview</title>
    <contents>
      <ul>
        <li><a href="http://davidmacd.com/wcag_theme_song.html">Web Content Accessibility Guidelines (WCAG) 2.0 Theme Song</a></li>
        <li>Introductions</li>
        <li>Part 1: The Basics</li>
        <li>Part 2: Automated Tools</li>
        <li>Part 3: ARIA Landmarks and Widgets</li>
        <li>Part 4: ARIA Authoring Practices</li>
        <li>Discussion and feedback</li>
      </ul>
      <script type="text/javascript">
        slideShowURL()
      </script>
    </contents>
  </slide>

  <slide>
    <title>Introductions</title>
    <contents>
      <ul>
        <li>Name</li>
        <li>Where your from</li>
        <li>One thing you would like ot get out of the workshop today</li>
        <li>One word that would describe part of you</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Part 1: The Basics</title>
    <contents>
      <ul>
        <li>Standards
          <ul>
            <li><a href="http://www.w3.org/tr/wcag/">W3C Web Content Accessibility Guidelines 2.0 (2008)</a></li>
            <li><a href="https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh">Section 508 Information and Communication Technology (ICT) Refresh (January 2018)</a></li>
            <li><a href="http://www.w3.org/TR/wai-aria" target="_specification">Accessible Rich Internet Applications (ARIA) 1.0 (2014)</a></li>
            <li><a href="https://w3c.github.io/html-aam/" target="_specification">HTML Accessibility API Mappings 1.0 (2017)</a></li>
            <li><a href="http://www.w3.org/TR/html5" target="_specification">HTML 5 Specification (2014) </a></li>
            <li><a href="http://w3c.github.io/aria/practices/aria-practices.html" target="_specification">ARIA Authoring Practices (2017)</a></li>
          </ul>
        </li>
        <li>First manual tests
          <ul>
            <li>Keyboard navigation and interaction</li>
            <li>Keyboard focus styling</li>
            <li>High contrast mode</li>
          </ul>
        </li>
      </ul>
    </contents>
  </slide>

   <slide>
    <title>Web Content Accessibility Guidelines 2.0</title>
    <contents>
      <p class="center">
        <a href="http://www.w3.org/TR/WCAG" target="_specification">Web Content Accessibility Guidelines 2.0</a>
      </p>
      <details>
        <summary>WCAG 2.0 Organization</summary>
        <ul>
          <li>Four Principles (POUR)
            <ul>
              <li>Perceivable</li>
              <li>Operable</li>
              <li>Understandable</li>
              <li>Robost</li>
            </ul>
          </li>
          <li>Twelve Guildelines</li>
          <li>61 Success Criteria
            <ul>
              <li>25 Level A requirements</li>
              <li>13 Level AA requirements</li>
              <li>23 Level AAA requirements</li>
            </ul>
          </li>
        </ul>
      </details>
      <details>
        <summary>Types of WCAG 2.0 Requirements</summary>
        <ul>
          <li>Element requirements</li>
          <li>Page requirements</li>
          <li>Website requirements</li>
        </ul>
      </details>
      <img src="images/wcag20-title.png" width="100%" alt="Graphical browser rendering of title portion of WCAG 2.0 Guidelines"/>
    </contents>
  </slide>

  <slide>
    <title>WCAG 2.0 Success Criteria </title>
    <contents>

      <table aria-labelledby="h1_title" class="table table-striped">
        <thead>
          <tr>
            <th>WCAG Level (number)</th>
            <th>Success Criteria</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              Level A (25)
            </td>
            <td>
              <ul>
                <li>1.1.1 Non-text Content</li>
                <li>1.2.1 Audio-only and Video-only (Prerecorded)</li>
                <li>1.2.2 Captions (Prerecorded)</li>
                <li>1.2.3 Audio Description or Media Alternative (Prerecorded)</li>
                <li>1.3.1 Info and Relationships</li>
                <li>1.3.2 Meaningful Sequence</li>
                <li>1.3.3 Sensory Characteristics</li>
                <li>1.4.1 Use of Color</li>
                <li>1.4.2 Audio Control</li>
                <li>2.1.1 Keyboard</li>
                <li>2.1.2 No Keyboard Trap</li>
                <li>2.2.1 Timing Adjustable</li>
                <li>2.2.2 Pause, Stop, Hide</li>
                <li>2.3.1 Three Flashes or Below Threshold</li>
                <li>2.4.1 Bypass Blocks</li>
                <li>2.4.2 Page Titled</li>
                <li>2.4.3 Focus Order</li>
                <li>2.4.4 Link Purpose (In Context)</li>
                <li>3.1.1 Language of Page</li>
                <li>3.2.1 On Focus</li>
                <li>3.2.2 On Input</li>
                <li>3.3.1 Error Identification</li>
                <li>3.3.2 Labels or Instructions</li>
                <li>4.1.1 Parsing</li>
                <li>4.1.2 Name, Role, Value</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              Level AA (13)
            </td>
            <td>
              <ul>
                <li>1.2.4 Captions (Live)</li>
                <li>1.2.5 Audio Description (Prerecorded)</li>
                <li>1.4.3 Contrast (Minimum)</li>
                <li>1.4.4 Resize text</li>
                <li>1.4.5 Images of Text</li>
                <li>2.4.5 Multiple Ways</li>
                <li>2.4.6 Headings and Labels</li>
                <li>2.4.7 Focus Visible</li>
                <li>3.1.2 Language of Parts</li>
                <li>3.2.3 Consistent Navigation</li>
                <li>3.2.4 Consistent Identification</li>
                <li>3.3.3 Error Suggestion</li>
                <li>3.3.4 Error Prevention (Legal, Financial, Data)</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              Level AAA (23)
            </td>
            <td>
              <ul>
                <li>1.2.6 Sign Language (Prerecorded)</li>
                <li>1.2.7 Extended Audio Description (Prerecorded)</li>
                <li>1.2.8 Media Alternative (Prerecorded)</li>
                <li>1.2.9 Audio-only (Live)</li>
                <li>1.4.6 Contrast (Enhanced)</li>
                <li>1.4.7 Low or No Background Audio</li>
                <li>1.4.8 Visual Presentation</li>
                <li>1.4.9 Images of Text (No Exception)</li>
                <li>2.1.3 Keyboard (No Exception)</li>
                <li>2.2.3 No Timing</li>
                <li>2.2.4 Interruptions</li>
                <li>2.2.5 Re-authenticating</li>
                <li>2.3.2 Three Flashes</li>
                <li>2.4.8 Location</li>
                <li>2.4.9 Link Purpose (Link Only)</li>
                <li>2.4.10 Section Headings</li>
                <li>3.1.3 Unusual Words</li>
                <li>3.1.4 Abbreviations</li>
                <li>3.1.5 Reading Level</li>
                <li>3.1.6 Pronunciation</li>
                <li>3.2.5 Change on Request</li>
                <li>3.3.5 Help</li>
                <li>3.3.6 Error Prevention (All)</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>Scope of Success Criteria for Level A and AA Success Criteria</title>
    <contents>

      <table aria-labelledby="h1_title" class="table table-striped">
        <thead>
          <tr>
            <th>Scope (number)</th>
            <th>Success Criteria</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              Element Requirements (20)
            </td>
            <td>
              <ul>
                <li>1.1.1 Non-text Content (Level 2)</li>
                <li>1.2.4 Captions: Live (Level AA)</li>
                <li>1.2.5 Audio Description: Prerecorded (Level AA)</li>
                <li>1.2.1 Audio-only and Video-only: Prerecorded  (Level A)</li>
                <li>1.2.2 Captions (Prerecorded) (Level A)</li>
                <li>1.2.3 Audio Description or Media Alternative (Prerecorded) (Level A)</li>
                <li>1.3.3 Sensory Characteristics (Level A)</li>
                <li>1.4.5 Images of Text (Level AA)</li>
                <li>2.2.1 Timing Adjustable (Level A)</li>
                <li>2.2.2 Pause, Stop, Hide (Level A)</li>
                <li>2.4.4 Link Purpose (In Context) (Level A)</li>
                <li>3.1.2 Language of Parts (Level AA)</li>
                <li>3.2.1 On Focus (Level A)</li>
                <li>3.2.2 On Input (Level A)</li>
                <li>3.3.1 Error Identification (Level A)</li>
                <li>3.3.2 Labels or Instructions (Level A)</li>
                <li>4.1.2 Name, Role, Value (Level A)</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              Page Requirements (15)
            </td>
            <td>
              <ul>
                <li>1.3.1 Info and Relationships (Level A)</li>
                <li>1.3.2 Meaningful Sequence (Level A)</li>
                <li>1.4.1 Use of Color (Level A)</li>
                <li>1.4.2 Audio Control (Level A)</li>
                <li>1.4.3 Contrast (Minimum) (Level AA)</li>
                <li>1.4.4 Resize text (Level AA)</li>
                <li>2.1.1 Keyboard (Level A)</li>
                <li>2.1.2 No Keyboard Trap (Level A)</li>
                <li>2.3.1 Three Flashes or Below Threshold (Level A)</li>
                <li>2.4.1 Bypass Blocks (Level A)</li>
                <li>2.4.2 Page Titled (Level A)</li>
                <li>2.4.3 Focus Order (Level A)</li>
                <li>2.4.6 Headings and Labels (Level AA)</li>
                <li>2.4.7 Focus Visible (Level AA)</li>
                <li>3.1.1 Language of Page (Level A)</li>
                <li>3.3.3 Error Suggestion (Level AA)</li>
                <li>3.3.4 Error Prevention: Legal, Financial, Data (Level AA)</li>
                <li>4.1.1 Parsing (Level A)</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              Website Requirements (3)
            </td>
            <td>
              <ul>
                <li>2.4.5 Multiple Ways (Level AA)</li>
                <li>3.2.3 Consistent Navigation (Level AA)</li>
                <li>3.2.4 Consistent Identification (Level AA)</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>




  <slide>
    <title>Accessible Rich Internet Applications (ARIA) 1.0</title>
    <ul>
      <li></li>
    </ul>
    <contents>
      <p class="center">
        <a href="http://www.w3.org/TR/wai-aria" target="_specification">Accessible Rich Internet Applications 1.0</a>
      </p>
      <img src="images/wai-aria-title.png" width="100%" alt="Graphical browser rendering of title portion of W3C ARIA 1.0 Specfication"/>
    </contents>
  </slide>

  <slide>
    <title>HTML 5</title>
    <contents>
      <p class="center">
        <a href="http://www.w3.org/TR/html5" target="_specification">HTML 5 Specification</a>
      </p>
      <img src="images/html5-title.png" width="100%" alt="Title portion of W3C HTML 5 Specification"/>
    </contents>
  </slide>

  <slide>
    <title>HTML5: main element</title>
    <contents>
      <p class="center">
        <a href="http://www.w3.org/TR/html5/grouping-content.html#the-main-element" target="_specification">HTML 5: main element</a>
      </p>
      <img src="images/html5-main.png" width="100%" alt="Graphical browser rendering of main element section of W3C HTML 5 Specification"/>
    </contents>
  </slide>

  <slide>
    <title>Accessible Rich Internet Application API Mappings</title>
    <contents>
      <p class="center">
        <a href="https://www.w3.org/TR/core-aam-1.1/" target="_specification">Core Accessibility API Mappings 1.1</a>
      </p>
      <img src="images/aria-api-mappings.png" width="100%" alt="Graphical browser rendering of ARIA API Mappings 1.1 Specification"/>
    </contents>
  </slide>


  <slide>
    <title>HTML API Mappings</title>
    <contents>
      <p class="center">
        <a href="https://w3c.github.io/html-aam/" target="_specification">HTML Accessibility API Mappings 1.0</a>
      </p>
      <img src="images/api-mappings.png" width="100%" alt="Graphical browser rendering of HTML Accessibility API Mappings 1.0 Specification"/>
    </contents>
  </slide>

  <slide>
    <title>ARIA Authoring Practices</title>
    <contents>
      <p class="center">
        <a href="http://w3c.github.io/aria/practices/aria-practices.html" target="_specification">WAI-ARIA Authoring Practices</a>
      </p>
      <img src="images/aria-practices.png" width="100%" alt="Graphical browser rendering of WAI-ARIA Authoring Practices 1.1 note"/>
    </contents>
  </slide>

  <slide>
    <title>Manual Testing: Keyboard Accessibility</title>
    <contents>
      <ul>
        <li><kbd>tab</kbd> order of interactive elements
          <ul>
            <li>links</li>
            <li>form controls</li>
            <li>media players</li>
            <li>Javascript widgets</li>
            <li>Embedded objects (e.g. Flash, Silverlight...)</li>
          </ul>
        </li>
        <li>Keyboard focus styling</li>
      </ul>

    <h2>WCAG 2.0 Keyboard Requirements</h2>
      <dl>
        <dt><a href="https://www.w3.org/TR/WCAG20/#keyboard-operation" target="_specification">2.1.1 Keyboard</a></dt>
        <dd>All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user's movement and not just the endpoints. (Level A) </dd>
        <dd><em>Note 1:</em> This exception relates to the underlying function, not the input technique. For example, if using handwriting to enter text, the input technique (handwriting) requires path-dependent input but the underlying function (text input) does not.</dd>
        <dd><em>Note 2:</em> This does not forbid and should not discourage providing mouse input or other input methods in addition to keyboard operation.</dd>

        <dt><a href="http://www.w3.org/TR/WCAG20//#qr-keyboard-operation-trapping" target="_specification">2.1.2 No Keyboard Trap</a></dt>
        <dd>If keyboard focus can be moved to a component of the page using a keyboard interface, then focus can be moved away from that component using only a keyboard interface, and, if it requires more than unmodified arrow or tab keys or other standard exit methods, the user is advised of the method for moving focus away. (Level A)</dd>
        <dd><em>Note:</em> Since any content that does not meet this success criterion can interfere with a user's ability to use the whole page, all content on the Web page (whether it is used to meet other success criteria or not) must meet this success criterion.</dd>
      </dl>
    </contents>
  </slide>

 <slide>
    <title>Focus Styling for Links and Form Controls</title>
    <contents>
      <ul>
        <li>Use CSS Pseudo selectors :focus and :active to style link with focus</li>
        <li>Changes needs to be more than just color (e.g. color blindess and other visual impairments)</li>
        <li>Recommend border, outline or underline</li>
        <li>Underlining links is important for people with low vision to identify the link</li>
        <li>For radio buttons and checkboxes include labels with focus styling to indicate the selectable area</li>
      </ul>

      <h2>WCAG 2.0 Focus Requirements</h2>
      <dl>
        <dt><a href="http://www.w3.org/TR/WCAG20/#navigation-mechanisms-focus-visible" target="_specification">2.4.7 Focus Visible</a></dt>
        <dd>Any keyboard operable user interface has a mode of operation where the keyboard focus indicator is visible. (Level AA).</dd>
      </dl>
    </contents>
  </slide>

  <slide>
    <title>A keyboard focus and mouse hover styling strategy</title>
    <contents>
      <ul>
        <li>Actively style keyboard focus, do not rely on browser defaults for keyboard focus styling.</li>
        <li>Change background color for both mouse hover and keyboard focus styling for links and form controls.</li>
        <li>Use border styling for keyboard focus:
          <ul>
            <li>Define a transparent CSS <code>border</code> and then give it a color when a link or form control receives focus.</li>
            <li>Use CSS <code>outline</code> with an outline color and solid outline when a link or form control receives focus.</li>
          </ul>
        </li>
        <li>For links in the main content and complementary areas of a web page make sure they are underline for both focus and hover, but recommend they allways have underline.</li>
        <li>Make sure all styling options meet WCAG 2.0 Level AA color contrast requirements.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Link menu focus and hover styling example</title>


    <contents>

    <style id="ex2">
       nav.example ul {
        margin: 0;
        padding: 0.5em;
      }

       nav.example ul li {
         margin: 0;
         padding: 0;
         list-style: none;
         float: left;
         padding-right: .5em;
        border-top: solid 2px #819BD5;
        border-bottom: solid 2px #819BD5;
       }

       nav.example ul li a {
         margin: 0;
         padding: 0;
         display: block;
         text-decoration: none;
         padding-left: 0.25em;
         padding-right: 0.25em;
         border: 2px transparent solid;
         color: #345498;
        }

        #id_default_focus ul li a:focus,
        #id_default_focus ul li a:hover {
          text-decoration: none;
         color: #345498;
        }

       #id_active_focus ul li a {
         outline: none;
        }

       #id_active_focus ul li a:focus {
         border-color: #345498;
         background-color: #c6d2eb;
         text-decoration: underline;
       }

       #id_active_focus ul li a:hover {
         background-color: #d9e1f2;
         text-decoration: underline;
       }

       main h2.example {
        margin-top: 4em;
        margin-bottom: 1em;
       }

    </style>
      <div  id="ex1">

        <h2 class="example">Default Browser Focus Styling</h2>

        <nav aria-label="Disability Resources" id="id_default_focus" class="example">

          <ul>
            <li><a href="http://disability.illinois.edu/academic-support">Academic Support</a></li>
            <li><a href="http://disability.illinois.edu/living-accommodations">Living Accommodations</a></li>
            <li><a href="http://disability.illinois.edu/getting-around">Getting Around</a></li>
            <li><a href="http://disability.illinois.edu/health">Health</a></li>
            <li><a href="http://disability.illinois.edu/campus-life">Campus Life</a></li>
          </ul>

        </nav>

        <h2 class="example">Active Focus Styling</h2>

        <nav aria-label="Disability Resources" id="id_active_focus" class="example">
          <ul>
            <li><a href="http://disability.illinois.edu/academic-support">Academic Support</a></li>
            <li><a href="http://disability.illinois.edu/living-accommodations">Living Accommodations</a></li>
            <li><a href="http://disability.illinois.edu/getting-around">Getting Around</a></li>
            <li><a href="http://disability.illinois.edu/health">Health</a></li>
            <li><a href="http://disability.illinois.edu/campus-life">Campus Life</a></li>
          </ul>

        </nav>
      </div>

      <div style="clear: both;"></div>

      <p style="margin-top: 2em;"><a href="https://webedit.disability.illinois.edu/pages/user/jongund/links-focus/">WebEdit sample for link focus styling</a></p>

      <h2>HTML Code</h2>
      <pre><code id="sc1"></code></pre>

      <h2>CSS Code</h2>
      <pre><code id="sc2"></code></pre>

      <script>
        sourceCode.add('sc1', 'ex1');
        sourceCode.add('sc2', 'ex2');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

 <slide>
    <title>Pizza Order Form: Focus Styling</title>
    <style id="style">
      label {
      display: block;
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-size: 100%;
      font-weight: bold;
      color: black;
      }


      select {
      margin: 0;
      padding: 0;
      margin-bottom: 1.25em;
      background-color: #FFFEFF;
      font-size: 1em;
      }


      fieldset legend {
      margin: 0;
      padding: 0;
      padding-top: 1em;
      font-weight: bold;
      font-size: 100%;
      }

      fieldset label {
      margin: 0;
      padding: 0;
      padding-top: 0.125em;
      padding-bottom: 0.125em;
      padding-left: 0.5em;
      width: 10em;
      font-weight: normal;
      border: 2px transparent solid;
      display: block;
      position: relative;
      left: -0.5em;
      }

      input[type=submit] {
      margin-top: 2em;
      }

      input[type=submit]:focus {
      outline: 2px solid black;
      }

      input[type="text"]:hover {
      background-color: #ADDFFF;
      }

      input[type="text"]:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      select:focus {
      outline: 2px solid black;
      background-color: #EEEEEE;
      }

      fieldset label:hover {
      background-color: #ADDFFF;
      }

      fieldset label.focus {
      border-color: black;
      background-color: #ADDFFF;
      }
    </style>

    <contents>
      <script id="script" type="text/javascript">

        function itemFocus(event) {
          if( event.target ) event.target.parentNode.classList.add("focus");
        }

        function itemBlur(event) {
          if( event.target ) event.target.parentNode.classList.remove("focus");
        }

      </script>

      <h2>Features</h2>
      <ul>
        <li><code>hover</code> and <code>focus</code> styling the similar to harmonize look and feel of styling between interaction techniques.</li>
        <li><code>focus</code> styling has a border and <code>hover</code> does not.</li>
        <li><code>focus</code> styling used a 2px <code>border</code> or <code>outline</code> width to make the control with focus salient to users.</li>
        <li>Need to use <code>onfocus</code> and <code>onblur</code> events to create focus styling of radio buttons and checkboxes with their labels.</li>
        <li>Styling background color also makes the change in focus much easier to detect visually.</li>
        <li>Do not set <code>hover</code> styling for <code>select</code> control.</li>
      </ul>


      <form id="form">
        <h2>Pizza Form</h2>

        <label for="id-name">Name</label>
        <input id="id-name" type="text" size="30"/>

        <label for="id-address">Address</label>
        <input id="id-address" type="text" size="40"/>

        <label for="id-phone">Phone</label>
        <input id="id-phone" type="text" size="14"/>

        <label for="id-delivery">Delivery Method</label>
        <select id="id-delivery">
          <option>Eat in store</option>
          <option>Pickup</option>
          <option>Home delivery</option>
        </select>

        <fieldset>
          <legend>Crust</legend>

          <label>
            <input name="crust" type="radio" value="Thin" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Thin
          </label>

          <label>
            <input name="crust" type="radio" value="Classic" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Classic
          </label>

          <label>
            <input name="crust" type="radio" value="Deep Dish" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Deep Dish
          </label>

        </fieldset>

        <fieldset>
          <legend>Toppings</legend>

          <label>
            <input name="topping" type="checkbox" value="Sausage" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Sausage
          </label>

          <label>
            <input name="topping" type="checkbox" value="Pepperoni" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Pepperoni
          </label>

          <label>
            <input name="topping" type="checkbox" value="Mushrooms" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Mushrooms
          </label>

          <label>
            <input name="topping" type="checkbox" value="Onions" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Onions
          </label>

          <label>
            <input name="topping" type="checkbox" value="Green Peppers" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Green Peppers
          </label>

          <label>
            <input name="topping" type="checkbox" value="Black Olives" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Back Olives
          </label>

          <label>
            <input name="topping" type="checkbox" value="Extra Cheese" onfocus="itemFocus(event)" onblur="itemBlur(event)"/>
            Extra cheese
          </label>

        </fieldset>

        <input type="submit" value="Submit Order" onclick="submitOrder(event)"/>

      </form>

      <h2>HTML Source Code</h2>

      <pre><code id="sc1"></code></pre>

      <h2>CSS Source Code</h2>

      <pre><code id="sc2"></code></pre>

      <h2>Javascript Source Code</h2>

      <pre><code id="sc3"></code></pre>


      <script type="text/javascript">
        sourceCode.add('sc1', 'form');
        sourceCode.add('sc2', 'style');
        sourceCode.add('sc3', 'script');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>
    </contents>
  </slide>



  <slide>
    <title>Keyboard focus should always be visible</title>
    <contents>
      <ul>
        <li>On some pages when tabbing through the page the keyboard focus disappears and then magically reappears.</li>
        <li>Disorienting to users when keyboard focus disappears and then reappears.</li>
        <li>Disappearing focus is usally caused by links or form controls that are rendered off screen using CSS <code>position="absolute"</code>, <code>top</code> and <code>left</code> properties.</li>
        <li>If links or form controls are not visible they should be hidden using CSS <code>display: none</code> or using the HTML5 <code>hidden</code> attribute, so they are not part of the tab order of the page.</li>
        <li>In general if you can't see a link or form control visually, the screen reader or keyboard only user should not be able to interact with link or form control.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>High Contrast Testing</title>
    <contents>

      <h2>Operating System Features</h2>
      <dl>
        <dt>Microsoft Windows 10</dt>
        <dd><em>Shortcut Key:</em> Press the left Shift, left Alt and Print Screen keys at the same time.</dd>
        <dd><em>Ease of Access:</em> Select high contrast theme.</dd>

        <dt>Apple OSX</dt>
        <dd><em>Accessibility (in Preferences):</em> Select 'Display" option and select high contrast options.</dd>
      </dl>


      <h2>Browser Techniques</h2>
      <dl>
        <dt>Firefox</dt>
        <dd>Disable stylesheets using the "View -> Style -> No Style" menu options.</dd>
        <dt>Chrome</dt>
        <dd><a href="https://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph?hl=en">High Contrast Extension</a></dd>
      </dl>

      <h2>WCAG 2.0 Color Requirements</h2>
      <dl>
        <dt><a href="https://www.w3.org/TR/WCAG20/#visual-audio-contrast" target="_specification">1.4.1 Use of Color</a></dt>
        <dd>Color is not used as the only visual means of conveying information, indicating an action, prompting a response, or distinguishing a visual element. (Level A)</dd>
        <dd><em>Note:</em> This success criterion addresses color perception specifically. Other forms of perception are covered in Guideline 1.3 including programmatic access to color and other visual presentation coding.</dd>
        <dt><a href="https://www.w3.org/TR/WCAG20//#qr-visual-audio-contrast-text-presentation" target="_specification">1.4.5 Images of Text</a></dt>
        <dd>If the technologies being used can achieve the visual presentation, text is used to convey information rather than images of text except for the following: (Level AA)</dd>
        <dd><strong>Customizable:</strong> The image of text can be visually customized to the user's requirements</dd>
        <dd><strong>Essential:</strong> A particular presentation of text is essential to the information being conveyed.</dd>
        <dd><em>Note:</em> Logotypes (text that is part of a logo or brand name) are considered essential.</dd>
      </dl>
    </contents>
  </slide>


  <slide>
    <title>Part 2: Automated Tools</title>
    <contents>
      <ul>
        <li><a href="https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh" target="_tool">Wave Extension for Chrome</a></li>
        <li><a href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd" target="_tool">aXe for Chrome</a></li>
        <li><a href="http://ainspector.github.io" target="_tool">AInspector Sidebar for Firefox</a> (Need to ESR Version of Firefox)</li>
        <li><a href="https://accessibility-bookmarklets.org/" target="_tool">Accessibility Bookmarklets for Firefox, Chrome and Safari</a></li>
        <li><a href="https://fae.disability.illinois.edu" target="_tool">Functional Accessibility Evaluator (FAE) 2.0</a></li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Browser Based Accessibility Evaluation and Inspection</title>
    <contents>
      <table aria-labelledby="h1_title" class="table table-striped">
        <thead>
          <tr>
            <th>Tool</th>
            <th>Strengths</th>
            <th>Weakness</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <a href="https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh" target="_tool">Wave Extension for Chrome</a>
            </td>
            <td>
              <ul>
                <li>Good for beginners.</li>
                <li>Visualization of accessibility features and problems.</li>
                <li>Icons to identify markup related to accessibility.</li>
                <li>Rule filtering.</li>
                <li>Summary report on left hand side.</li>
                <li><code>alt</code> for images.</li>
                <li><code>label</code>s for form controls.</li>
                <li>Color contrast tests.</li>
              </ul>
            </td>
            <td>
              <ul>
                <li>Limited number of rules.</li>
                <li>Anayzes hidden content, which can sometimes be a problem when the content is never showed to users or is going to be made accessible when it is made visible.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              <a href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd" target="_tool">aXe for Chrome</a>
            </td>
            <td>
              <ul>
                <li>Good for dvelopers.</li>
                <li>Adds a tab to the DOM inspector.</li>
                <li><code>alt</code> for images.</li>
                <li><code>label</code>s for form controls.</li>
                <li>Color contrast tests.</li>
                <li>Support for ARIA widgets.</li>
              </ul>
            </td>
            <td>
              <ul>
                <li>Limited number of rules.</li>
                <li>Need to be comfortable with DOM inspector.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>
              <a href="http://ainspector.github.io" target="_tool">AInspector Sidebar for Firefox</a>
            </td>
            <td>
              <ul>
                <li>Good for dvelopers and teaching about WCAG 2.0 requirements.</li>
                <li>At least one rule for each WCAG 2.0 Level A and AA requirement.</li>
                <li>132 total rules.</li>
                <li>Support for ARIA Landmarks.</li>
                <li>Support for ARIA widgets.</li>
              </ul>
            </td>
            <td>
              <ul>
                <li>Number of rule results can overwhelming to new users.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>


  <slide>
    <title>Demonstration of Tools for Basic Accessibility Features</title>
    <contents>
      <ul>
        <li><code>alt</code> attribute for images.</li>
        <li>Labels for form controls.</li>
        <li>Color contrast.</li>
        <li>Poor or missing link text.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>OpenAjax Evaluation Library</title>
    <contents>
      <ul>
        <li>Support the use of HTML5 and ARIA techniques for implementation of WCAG 2.0 Level A and AA requirements</li>
        <li>Raise awareness of accessibility of accessibility issues</li>
        <li>Knowledge base on what it means to comply with WCAG 2.0 requirements for specific technologies (e.g. teaching and learning framework)</li>
        <li>Support institutional planning and compliance</li>
        <li>Open source to promote discussion and conversation on what it means to be "accessible" (e.g. people can define their own definition with open source)</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Rulesets</title>
    <contents>
      <p class="center">
        <a href="https://fae.disability.illinois.edu/rulesets/" target="_specification">Comparison of OpenAjax Evaluation Library Rulesets</a>
      </p>

      <h2 id="id1">Rulesets</h2>
      <table aria-labelledby="id1" class="table table-striped">
        <thead>
          <tr>
            <th>Title</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>HTML5 and ARIA Techniques</td>
            <td>WCAG 2.0 Level A and AA requirements using ARIA 1.0 and HTML5 accessibility features.</td>
          </tr>
          <tr>
            <td>HTML4 Legacy Techniques</td>
            <td>WCAG 2.0 Level A and AA requirements primarily using HTML4 techniques, but allows HTML5 and ARIA 1.0 accessibility techniques.
            </td>
          </tr>

        </tbody>
      </table>

    </contents>
  </slide>

  <slide>
    <title>Rule Features</title>
    <contents>
      <p class="center">

      </p>

      <ul>
        <li>Summary</li>
        <li>Defintion</li>
        <li>Purpose</li>
        <li>WCAG 2.0 Success Criteria (e.g. primary and secondary)</li>
        <li>Techniques</li>
        <li>Scope: Website, Page or element</li>
        <li>Links to related information</li>
        <li><a href="https://fae.disability.illinois.edu/rulesets/CONTROL_1/" target="_specification">Example Rule: Form controls must have labels</a></li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Rule Results</title>
    <contents>

      <table aria-labelledby="id1" class="table table-striped">
        <thead>
          <tr>
            <th>Result</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Violation</td>
            <td>Fails a required rule</td>
          </tr>
          <tr>
            <td>Warning</td>
            <td>Fails a reccomended rule</td>
          </tr>
          <tr>
            <td>Manual Check</td>
            <td>Human judgement is needed for verification of meeting an accessibility requirement</td>
          </tr>
          <tr>
            <td>Passed</td>
            <td>The accessibility requirement has been met</td>
          </tr>
          <tr>
            <td>Not Applicable</td>
            <td>No elements on the page applied to this rule</td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>


  <slide>
    <title> Rule Categories</title>
    <contents>

      <table class="details table table-striped table-hover" aria-labelledby="rule_categories">
        <thead>
          <tr>
            <th class="text">Category</th>
            <th class="text">Definition</th>
          </tr>
        </thead>
        <tbody>

          <tr>
            <th>Landmarks</th>
            <td>Use ARIA landmark roles to structure the content of each page and identify major sections of content, thus making them more findable and navigable. The use of landmarks will, in many cases, reflect the visual styling and page layouts that web designers utilize to set apart various sections of content.</td>
          </tr>

          <tr>
            <th>Headings</th>
            <td>Use heading elements (H1-H6) to provide appropriate labels for landmarks, and to identify subsections of content within landmarks.</td>
          </tr>

          <tr>
            <th>Styles/Content</th>
            <td>Use proper HTML markup to identify the semantics and language of text content. Ensure that text is readable by adhering to color contrast guidelines, and that information is not conveyed solely by the use of color, shape, location or sound.</td>
          </tr>

          <tr>
            <th>Images</th>
            <td>Provide appropriate text alternatives for static images and graphics.</td>
          </tr>

          <tr>
            <th>Links</th>
            <td>Use link text that properly describes the target of each link. Ensure consistency and uniqueness for links that are usable, predictable and understandable.</td>
          </tr>

          <tr>
            <th>Tables</th>
            <td>Provide table captions or other meta-information as needed. Provide row and column header references for data cells of data tables. Ensure that tables used for layout properly linearize text content.</td>
          </tr>

          <tr>
            <th>Forms</th>
            <td>Provide meaningful labels for form elements and usable and understandable error feedback as needed.</td>
          </tr>

          <tr>
            <th>Widgets/Scripts</th>
            <td>Use appropriate event handlers on elements to support native interactivity using JavaScript. Ensure that custom widgets created using JavaScript support keyboard interaction and include ARIA markup to describe their roles, properties and states.</td>
          </tr>

          <tr>
            <th>Audio/Video</th>
            <td>Provide appropriate text transcripts, captions or audio descriptions for elements used in rendering audio and video content.</td>
          </tr>

          <tr>
            <th>Keyboard</th>
            <td>Provide logical and sequential keyboard navigation among interactive elements such as links and form controls. Use standard models of keyboard interaction for custom widgets.</td>
          </tr>

          <tr>
            <th>Timing</th>
            <td>Eliminate accessibility problems caused by time limits on input and by content that moves, scrolls, flashes or auto-updates.</td>
          </tr>

          <tr>
            <th>Site Navigation</th>
            <td>Ensure the consistent labeling and ordering of recurrent page sections across all pages within a website. Provide a meaningful title for each page within a website.</td>
          </tr>

        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>Ruleset and Rule Details</title>
    <contents>
      <ul>
        <li><a href="https://fae.disability.illinois.edu/rulesets/ruleset/ARIA_STRICT/" target="_specification">HTML5 and ARIA Ruleset</a></li>
        <li><a href="https://fae.disability.illinois.edu/rulesets/ruleset/ARIA_TRANS/" target="_specification">HTML4 Legacy Ruleset</a></li>
        <li><a href="https://fae.disability.illinois.edu/rulesets/" target="_specification">Comparison of OpenAjax Rulesets</a></li>
      </ul>

    </contents>
  </slide>


  <slide>
    <title>Functional Accessibility Evaluator (FAE) 2.0</title>
    <contents>
      <ul>
        <li>Two versions of Functional Accessibility Evaluator 2.0
          <ul>
            <li><a href="https://fae.disability.illinois.edu">FAE 2.0 Indidvidual License Version</a></li>
            <li><a href="https://fae.illinois.edu">FAE 2.0 Institutional License Version</a> using <a href="https://www.incommon.org/">InCommon</a></li>
          </ul>
        </li>
        <li>Website rule result summaries and implementation status</li>
        <li>Page rule result summaries</li>
        <li>Organizes rules by Rule Categories, Rule Scope and WCAG Guidelines</li>
        <li>Archive and share reports</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Part 3: ARIA Landmarks and Widgets</title>
    <contents>
    </contents>
  </slide>

 <slide>
    <title>Landmarks and HTML5 Section Elements</title>
    <contents>
      <ul>
        <li>ARIA Roles</li>
        <li>HTML 5 Section Elements</li>
      </ul>
      <h2>Related WCAG 2.0 Success Criteria</h2>
      <ul>
        <li><a href="https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic" target="_specification">1.3.1 Info and Relationships</a></li>
        <li><a href="https://www.w3.org/TR/WCAG20/#navigation-mechanisms-skip" target="_specification">2.4.1 Bypass Blocks</a></li>
        <li><a href="https://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive" target="_specification">2.4.6 Headings and Labels</a></li>
      </ul>
    </contents>
  </slide>


  <slide>
    <title>ARIA 1.1 Landmarks</title>
    <contents>
      <p><a href="https://www.w3.org/TR/wai-aria-1.1/#landmark_roles" target="_specification">ARIA 1.1 Landmark Role Specification</a></p>

      <table class="table table-striped" aria-label="ARIA 1.1 Landmarks">
        <thead>
          <tr>
            <th>Landmark</th>
            <th>Frequency of Usage</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>banner</code></td>
            <td>None or one</td>
            <td>The common content typically found at the top of each page in a website.</td>
          </tr>
          <tr>
            <td><code>complementary</code></td>
            <td>As many as needed, often none.</td>
            <td>Identifies unique page content not part of the <code>main</code> landmark.</td>
          </tr>
          <tr>
            <td><code>contentinfo</code></td>
            <td>None or one</td>
            <td>The common content typically found at the bottom of each page in a website.</td>
          </tr>
          <tr>
            <td><code>form</code></td>
            <td>As many as needed, rarely used in practice.</td>
            <td>Forms within an another landmark.</td>
          </tr>
          <tr>
            <td><code>main</code></td>
            <td>Typically one, but in mashups every app may be identified with a <code>main</code> landmark.</td>
            <td>Identify the main content area or areas of a web page or application</td>
          </tr>
          <tr>
            <td><code>navigation</code></td>
            <td>As many as needed.</td>
            <td>Identify website navigational links</td>
          </tr>
          <tr>
            <td>
              <code>region</code>
              <br/>(conditional)
            </td>
            <td>As many as needed.</td>
            <td>
              <ul>
                <li><code>region</code> role is only considered a landmark when it has an <a htef="">accessible name</a>.</li>
                <li>Used to identify sub-sections of other landmarks</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td><code>search</code></td>
            <td>Typically one if there is a site search feature.</td>
            <td>Identify website search features</td>
          </tr>
        </tbody>
      </table>
      <ul>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>General Principles of Landmark Design</title>
    <contents>

      <p>
        Including <strong>all content</strong> on a page in one of its landmark regions and giving each landmark region a semantically meaningful role is one of the most effective ways of ensuring assistive technology users will not overlook information that is relevant to their needs.
      </p>

      <p><strong>Step 1: Identify the logical structure</strong></p>

      <ul>
        <li>Break the page into perceivable areas of content which designers typically indicate visually using alignment and spacing.</li>

        <li>Areas can be further defined into logical sub-areas as needed.</li>

        <li>An example of a sub-area is a portlet in a portal application.</li>
      </ul>

      <p><strong>Step 2: Assign landmark roles to each area</strong></p>

      <ul>
        <li>Assign landmark roles based on the type of content in the area.</li>

        <li><code>banner</code>, <code>main</code>, <code>complementary</code> and <code>contentinfo</code> landmarks should be top level landmarks.</li>

        <li>Landmark roles can be nested to identify parent/child relationships of the information being presented.</li>
      </ul>

      <p><strong>Step 3: Label areas</strong></p>

      <ul>
        <li>If a specific landmark role is used more than once on a web page, it should have a unique label.</li>

        <li>If a landmark is only used once on the page it may not require a label. See Landmark Roles section below. </li>

        <li>If an area begins with a heading element (e.g. <code>h1-h6</code>) it can be used as the label for the area using the <code>aria-labelledby</code> attribute.</li>

        <li>If an area requires a label and does not have a heading element, provide a label using the <code>aria-label</code> attribute.</li>

        <li>
          Do not use the landmark role as part of the label. For example, a navigation landmark with a label "Site Navigation" will be announced by a screen reader as "Site Navigation Navigation". The label should simply be "Site".
        </li>
      </ul>
      <p><em><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#general-principles-of-landmark-design">Taken from ARIA Authoring Practices Guide</a></em></p>
    </contents>
  </slide>

  <slide>
    <title>MAIN Landmark</title>
    <contents>
      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              A <code>main</code> landmark identifies the primary content of the page.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#main" target="_specification"><code>main</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li>Each page should have one <code>main</code> landmark.</li>
                <li>The <code>main</code> landmark should be a top-level landmark.</li>
                <li>When a page contains nested <code>document</code> and/or <code>application</code> roles (e.g. typically through the use of <code>iframe</code> and <code>frame</code> elements),
                  each <code>document</code> or <code>application</code> role may have one <code>main</code> landmark.</li>
                <li>If a page includes more than one <code>main</code> landmark, each should have a unique label.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>Use the HTML5 <code>main</code> element to define a <code>main</code> landmark.</li>
                <li>If the HTML5 <code>main</code> element technique is not being used, use a <code>role="main"</code> attribute to define a <code>main</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each main landmark should have an <code>h1</code> element describing the main content.</li>
                <li>If there are more than one main landmarks on the page, use <code>aria-labelledby</code> to reference the <code>h1</code> elements for labeling each landmark.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>

      <h2>One Main Landmark</h2>

      <h3>HTML5 <code>main</code> element technique</h3>
      <div class="code">
        <strong>&lt;main&gt;</strong><br/><br/>
        &#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/><br/>
        &#160;&#160;.... <em>main content</em>....   <br/><br/>
        <strong>&lt;/main&gt;</strong>
      </div>

      <h3><code>[role="main"]</code> attribute technqiue</h3>
      <div class="code">
        &lt;div <strong>role="main"&gt;</strong><br/><br/>
        &#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/><br/>
        &#160;&#160;.... <em>main content</em>....   <br/><br/>
        &lt;/div&gt;
      </div>


      <h2>Multiple Main Landmarks</h2>

      <div class="code">
        <strong>&lt;main  aria-labelledby="<em>title1</em>"&gt;</strong><br/><br/>
        &#160;&#160;&lt;h1 <strong>id="<em>title1</em>"</strong>&gt;<em>title for main content 1</em>&lt;h1&gt;<br/><br/>
        &#160;&#160;.... <em>main content</em>....<br/><br/>
        <strong>&lt;/main&gt;</strong><br/><br/>
        ....<br/><br/>
        <strong>&lt;main  aria-labelledby="<em>title2</em>"&gt;</strong><br/><br/>
        &#160;&#160;&lt;h1 <strong>id="<em>title2</em>"</strong>&gt;<em>title for main content 2</em>&lt;h1&gt;<br/><br/>
        &#160;&#160;.... <em>main content</em>....<br/><br/>
        <strong>&lt;/main&gt;</strong><br/><br/>
      </div>
    </contents>
  </slide>

  <slide>
    <title>NAVIGATION Landmark</title>
    <contents>
      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              Navigation landmarks provide a way to identify groups (e.g. lists) of links that are intended to be used for website or page content navigation.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#navigation" target="_specification"><code>navigation</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li>If a page includes more than one <code>navigation</code> landmark, each should have a unique label.</li>
                <li>If a <code>navigation</code> landmark has an identical set of links as another <code>navigation</code> landmark on the page, use the same label for each <code>navigation</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>Use the HTML5 <code>nav</code> element to define a <code>navigation</code> landmark.</li>
                <li>If the HTML5 <code>nav</code> element technique is not being used, use a <code>role="navigation"</code> attribute to define a <code>navigation</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each navigation landmark should have an <code>h2</code> element, which maybe rendered off screen.</li>
                <li>If there are more than one navigation landmarks on the page, use <code>aria-labelledby</code> to reference the <code>h2</code> elements for labeling each landmark.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
      <h2>One <code>navigation</code> landmark</h2>
      <h3>HTML5 <code>nav</code> element technique</h3>
      <div class="code">
        <strong>&lt;nav&gt;</strong><br/><br/>
        &#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/><br/>
        &#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&lt;/ul><br/>
        <strong>&lt;/nav&gt;</strong>
      </div>
      <h3><code>[role="navigation"]</code> attribute technique</h3>
      <div class="code">
        &lt;div <strong>role="navigation"</strong>&gt;<br/><br/>
        &#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/><br/>
        &#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&lt;/ul><br/>
        &lt;/div&gt;
      </div>
      <h2>More than one <code>navigation</code> landmark</h2>
      <div class="code">
        <strong>&lt;nav  aria-labelledby="<em>nav1</em>"&gt;</strong><br/><br/>
        &#160;&#160;&lt;h2 <strong>id="<em>nav1</em>"</strong>&gt;<em>title for navigation 1</em>&lt;h2&gt;<br/><br/>
        &#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page11.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page12.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page13.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page14.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&lt;/ul><br/>
        <strong>&lt;/nav&gt;</strong><br/><br/>
        ....<br/><br/>
        <strong>&lt;nav  aria-labelledby="<em>nav2</em>"&gt;</strong><br/><br/>
        &#160;&#160;&lt;h2 <strong>id="<em>nav2</em>"</strong>&gt;<em>title for navigation 2</em>&lt;h2&gt;<br/><br/>
        &#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page11.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page12.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page13.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page14.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&lt;/ul><br/>
        <strong>&lt;/nav&gt;</strong>
      </div>
    </contents>
  </slide>

  <slide>
    <title>BANNER Landmark</title>
    <contents>

      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              A <code>banner</code> landmark identifies site-oriented content at the beginning of each page within a website. Site-oriented content typically includes things such as the logo or identity of the site sponsor, and site-specific search tool. A banner usually appears at the top of the page and typically spans the full width.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#banner" target="_specification"><code>banner</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li>Each page may have one <code>banner</code> landmark.</li>
                <li>The <code>banner</code> landmark should be a top-level landmark.</li>
                <li>When a page contains nested <code>document</code> and/or <code>application</code> roles (e.g. typically through the use of <code>iframe</code> and <code>frame</code> elements),
                  each <code>document</code> or <code>application</code> role may have one <code>banner</code> landmark.</li>
                <li>If a page includes more than one <code>banner</code> landmark, each should have a unique label (see Step 3 above).</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>The HTML5 <code>header</code> element defines a <code>banner</code> landmark when its context is the <code>body</code> element.</li>
                <li>The HTML5 <code>header</code> element is not considered a <code>banner</code> landmark when it is descendant of any of following elements:
                  <ul>
                    <li><code>address</code></li>
                    <li><code>article</code></li>
                    <li><code>aside</code></li>
                    <li><code>blockquote</code></li>
                    <li><code>details</code></li>
                    <li><code>fieldset</code></li>
                    <li><code>figure</code></li>
                    <li><code>main</code></li>
                    <li><code>nav</code></li>
                    <li><code>section</code></li>
                    <li><code>table</code></li>
                  </ul>
                </li>
                <li>If the HTML5 <code>header</code> element technique is not being used, a <code>role="banner"</code> attribute should be used to define a <code>banner</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each banner landmark may have an <code>h1</code> element defining a label for the website.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>


      <h2>Example of HTML5 <code>header</code> element technique</h2>
      <div class="code">
        &lt;body&gt;<br/><br/>

        &#160;&#160;<strong>&lt;header&gt;</strong><br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>website information</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>banner content</em>....   <br/>
        &#160;&#160;<strong>&lt;/header&gt;</strong><br/><br/>
        &#160;&#160;&lt;nav&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&#160;&#160;&lt;/ul><br/>
        &#160;&#160;&lt;/nav&gt;<br/><br/>

        &#160;&#160;&lt;main&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>main content</em>....   <br/>
        &#160;&#160;&lt;/main&gt;<br/><br/>

        &#160;&#160;&lt;footer&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;Contact, Policies and Legal&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>contentinfo content</em>....   <br/>
        &#160;&#160;&lt;/footer&gt;<br/>

        &lt;/body&gt;<br/><br/>

      </div>

      <h2>Example of <code>[role="banner"]</code> element technique</h2>
      <div class="code">
        &lt;body&gt;<br/><br/>

        &#160;&#160;&lt;div <strong>role="banner"</strong>&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>website information</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>banner content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div role="navigation"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&#160;&#160;&lt;/ul><br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div role="main"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>main content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div role="contentinfo"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;Contact, Policies and Legal&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>contentinfo content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/>

        &lt;/body&gt;<br/><br/>

      </div>

    </contents>
  </slide>

  <slide>
    <title>CONTENTINFO Landmark</title>
    <contents>

      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              A <code>contentinfo</code> landmark is a way to identify common information at the bottom of each page within a website, typically called the "footer" of the page, including information such as copyrights and links to privacy and accessibility statements.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#contentinfo" target="_specification"><code>contentinfo</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li>Each page may have one <code>contentinfo</code> landmark.</li>
                <li>The <code>contentinfo</code> landmark should be a top-level landmark.</li>
                <li>When a page contains nested <code>document</code> and/or <code>application</code> roles (e.g. typically through the use of <code>iframe</code> and <code>frame</code> elements),
                  each <code>document</code> or <code>application</code> role may have one <code>contentinfo</code> landmark.</li>
                <li>If a page includes more than one <code>contentinfo</code> landmark, each should have a unique label (see Step 3 above).</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>The HTML5 <code>footer</code> element defines a <code>contentinfo</code> landmark when its context is the <code>body</code> element.</li>
                <li>The HTML5 <code>footer</code> element is not considered a <code>contentinfo</code> landmark when it is descendant of any of following elements:
                  <ul>
                    <li><code>address</code></li>
                    <li><code>article</code></li>
                    <li><code>aside</code></li>
                    <li><code>blockquote</code></li>
                    <li><code>details</code></li>
                    <li><code>fieldset</code></li>
                    <li><code>figure</code></li>
                    <li><code>main</code></li>
                    <li><code>nav</code></li>
                    <li><code>section</code></li>
                    <li><code>table</code></li>
                  </ul>
                </li>
                <li>If the HTML5 <code>footer</code> element technique is not being used, a <code>role="contentinfo"</code> attribute should be used to define a <code>contentinfo</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each contentinfo landmark may have an <code>h2</code> element describing the content of the footer.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>


      <h2>Example of HTML5 <code>footer</code> element technique</h2>
      <div class="code">
        &lt;body&gt;<br/><br/>

        &#160;&#160;&lt;header&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>website information</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>banner content</em>....   <br/>
        &#160;&#160;&lt;/header&gt;<br/><br/>
        &#160;&#160;&lt;nav&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&#160;&#160;&lt;/ul><br/>
        &#160;&#160;&lt;/nav&gt;<br/><br/>

        &#160;&#160;&lt;main&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>main content</em>....   <br/>
        &#160;&#160;&lt;/main&gt;<br/><br/>

        &#160;&#160;<strong>&lt;footer&gt;</strong><br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>Contact, Policies and Legal</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>contentinfo content</em>....   <br/>
        &#160;&#160;<strong>&lt;/footer&gt;</strong><br/>

        &lt;/body&gt;<br/><br/>

      </div>

      <h2>Example of <code>[role="contentinfo"]</code> element technique</h2>
      <div class="code">
        &lt;body&gt;<br/><br/>

        &#160;&#160;&lt;divrole="banner"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;website information&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>banner content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div role="navigation"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>title for navigation</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;ul><br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;a href="page4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;<br/>
        &#160;&#160;&#160;&#160;&#160;&#160;.....<br/>
        &#160;&#160;&#160;&#160;&lt;/ul><br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div role="main"&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h1&gt;<em>title for main content</em>&lt;h1&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>main content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/><br/>

        &#160;&#160;&lt;div <strong>role="contentinfo"</strong>&gt;<br/>
        &#160;&#160;&#160;&#160;&lt;h2&gt;<em>Contact, Policies and Legal</em>&lt;h2&gt;<br/>
        &#160;&#160;&#160;&#160;.... <em>contentinfo content</em>....   <br/>
        &#160;&#160;&lt;/div&gt;<br/>

        &lt;/body&gt;<br/><br/>

      </div>

    </contents>
  </slide>

  <slide>
    <title>COMPLEMENTARY Landmark</title>
    <contents>

      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              A <code>complementary</code> landmark is a supporting section of the document, designed to be complementary to the main content at a similar level in the DOM hierarchy, but remains meaningful when separated from the main content.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#complementary" target="_specification"><code>complementary</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li><code>complementary</code> landmarks should be top level landmarks (e.g. not contained within any other landmarks).</li>
                <li>If the complementary content is not related to the main content, a more general role should be assigned (e.g. <code>region</code>).</li>
                <li>If a page includes more than one <code>complementary</code> landmark, each should have a unique label (see Step 3 above).</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>Use the HTML5 <code>aside</code> element to define a <code>complementary</code> landmark.</li>
                <li>If the HTML5 <code>aside</code> element technique is not being used, use a <code>role="complementary"</code> attribute to define a <code>complementary</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each complementary landmark should have an <code>h2</code> element identifying the content of the landmark.</li>
                <li>If there are more than one complementary landmark on the page, use <code>aria-labelledby</code> to reference the <code>h2</code> elements for labeling each landmark.</li>

              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>REGION Landmark</title>
    <contents>

      <table class="table table-striped table-hover" aria-labelledby="id1">
        <tbody>
          <tr>
            <th>Definition</th>
            <td>
              A <code>region</code> landmark is a perceivable section of the page containing content that is sufficiently important for users to be able to navigate to the section.
            </td>
          </tr>
          <tr>
            <th>ARIA 1.1 Specification</th>
            <td>
              <a href="https://www.w3.org/TR/wai-aria-1.1/#region" target="_specification"><code>region</code> landmark</a>
            </td>
          </tr>
          <tr>
            <th>Coding Patterns</th>
            <td>
              <ul>
                <li>A <code>region</code> landmark must have a label using <code>aria-label</code>, <code>arai-labelledby</code> or the <code>title</code> attribute.</li>
                <li>If a page includes more than one <code>region</code> landmark, each should have a unique label.</li>
                <li>The <code>region</code> landmark can be used identify content that named landmarks do not appropriately describe.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Techniques</th>
            <td>
              <ul>
                <li>Use the HTML5 <code>section</code> element to define a <code>region</code> landmark.</li>
                <li>If the HTML5 <code>section</code> element technique is not being used, use a <code>role="region"</code> attribute to define a <code>region</code> landmark.</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Headings</th>
            <td>
              <ul>
                <li>Each region landmark should have a heading <code>h2-h6</code> element identifying the content of the landmark.</li>
                <li>If there are more than one region landmark on the page, use <code>aria-labelledby</code> to reference the heading element for labeling each landmark.</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>Landmark Coding Patterns</title>
    <contents>
      <ul>
        <li>All content should be contained in a landmark:
          <ul>
            <li>banner (top level)</li>
            <li>complementary</li>
            <li>contentinfo  (top level)</li>
            <li>main (top level)</li>
            <li>navigation</li>
            <li>region (sub sections and unique content)</li>
            <li>search</li>
          </ul>
        </li>
        <li><em>Must</em> use labels when a landmark of the same type is used more than once</li>
        <li><em>Should</em> not nest landmarks of the same type</li>
      </ul>
    </contents>
  </slide>
  <slide>
    <title>Bookmarklets for Visualizing Landmarks and Headings</title>
    <contents>
      <ul>
        <li><a href="https://accessibility-bookmarklets.org/">Public Bookmarklets Website</a></li>
        <li>Features:
          <ul>
            <li>Highlight Regions and Elements on page</li>
            <li>Element information</li>
            <li>Default or defined <code>role</code></li>
            <li>Accessible name</li>
            <li>Accessible description</li>
            <li>Important prorperties (e.g the number of items in a list)</li>
          </ul>
        </li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>The Problem of Custom Wigets</title>
    <contents>
      <h2>Problem</h2>
      <ul>
        <li>Starting in 2000 people started using HTML+CSS+Javascript to create <em>custom widgets</em> (e.g. interactive controls) for web pages.</li>
        <li>There was no standard and interoperable way to make these <em>custom widgets</em> accessible.</li>
      </ul>

      <h2>Issues</h2>
      <ul>
        <li>Keyboard support.</li>
        <li>Describing the widget behavior (e.g. role).</li>
        <li>Labeling the features of the widget (e.g. accessible name).</li>
        <li>Identifying properties and states. (e.g. checked, exapnded, has popup)</li>
        <li>Communicating information through platform specific accessibility APIs.</li>
        <li>Interoperability between browser and accessibility APIs.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Purpose of ARIA to Describe Behavior and Features</title>
    <contents>
       <ul>
         <li>Provide an interoperable way to describe the features of <em>custom widgets</em>:
           <ul>
             <li><strong>Role:</strong> Describes the type of widget, which implies the <em>keyboard interaction</em>.</li>
             <li><strong>Properties and States:</strong> Describing features like "expandable", "checked" or "selected".</li>
             <li><strong>Language independence:</strong> Roles, properties and states can be translated by the operating systems and assistive technologies to local languages.</li>
             <li><strong>Labeling:</strong> How to label the features of the widget and its components (e.g. accessible name).</li>
             <li><strong>Relationships:</strong> How different components relate to each other (e.g. descriptions, controls, owns).</li>
             <li><strong>Grouping:</strong> Groups of related components (e.g. lists, menus, trees, tab panels).</li>
           </ul>
        </li>
        <li>Define markup mappings to accessibility APIs:
          <ul>
            <li>ATK/AT-SPI (Linux/Unix)</li>
            <li>Microsoft Active Accessibility (MSAA) + IAccessible2</li>
            <li>Microsoft UI Automate</li>
            <li>MacOS Accessibility API</li>
          </ul>
         </li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>ARIA Contract with Browsers and Assistive Technologies</title>
    <contents>
      <h2>Browsers</h2>
      <ul>
        <li>The use of ARIA markup does not affect browser behavior or rendering.</li>
        <li>ARIA only affects how information is represented in accessibility APIs (e.g. MSAA+IAccessible2, ATK+SPI, UIAutomate, MacOS).</li>
      </ul>

      <h2>Asssitive Technologies</h2>
      <ul>
        <li>Do not specify what assistive technologies will do with the information.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Important Concepts: Role, Accessible Name and Accessible Description</title>
    <contents>
      <table class="table table-striped table-hover" aria-labelledby="h1_title">
        <thead>
          <tr>
            <th>Concept</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Role</th>
            <td>Describes what the function of an element is in the document and what types of interaction is expected, examples include:
               <ul>
                 <li>link</li>
                 <li>textbox</li>
                 <li>checkbox</li>
                 <li>radio button</li>
               </ul>
            </td>
          </tr>
          <tr>
            <th>Accessible Name</th>
            <td>Describes the purpose of this specific form control in the form and is computed based on author supplied information.<br/>
              Examples of sources of accessible names include:
              <ul>
                <li>Child text nodes of <code>label</code> element (preferred)</li>
                <li><code>aria-label</code> attribute</li>
                <li><code>aria-labelledby</code> attribute</li>
                <li><code>title</code> attribute</li>
              </ul>
            </td>
          </tr>
          <tr>
            <th>Accessible Description</th>
            <td>Additional information or context information about a link, form control or ARIA wdiget.<br/>
              Examples of sources of accessible description include:
              <ul>
                <li><code>aria-describedby</code> attribute</li>
                <li><code>title</code> attribute</li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </contents>
  </slide>

  <slide>
    <title>ARIA Example: Checkbox</title>
    <contents>
      <p><a href="https://webedit.disability.illinois.edu/pages/user/jongund/aria-checkbox/" target="_webedit">ARIA Checkbox Example</a></p>

      <h2>ARIA Example Features</h2>
      <ul>
        <li><code>role="checkbox"</code> identifies the widget as a checkbox.</li>
        <li><code>tabindex="0"</code> puts the widget into the tab order of the page.</li>
        <li><code>aria-checked</code> provides information on the state of the checkbox.</li>
        <li><code>onKeyDown</code> and <code>onClick</code> events provides the behavior to toggle the checkbox.</li>
        <li>CSS used to display visual state of ARIA enabled checkbox.</li>
        <li>CSS used to provide keyboard focus styling.</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Part 4: ARIA Authoring Practices</title>
    <contents>
      <ul>
        <li>ARIA is often confusing to developers and designers.</li>
        <li>Improperly used ARIA markup can make web resources less accessible and break interoperability.</li>
        <li>ARIA examples and usage in actual websites are incomplete or incorrectly use ARIA markup adding to confusion.</li>
        <li>Lack of awareness of keyboard interaction support needed to make ARIA work properly.</li>
      </ul>
    </contents>
  </slide>

 <slide>
   <title>Section 3: Landmark Regions</title>
   <contents>
     <ul style="margin-bottom: 2em">
       <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_landmark">ARIA Authoring Practices: Landmark Regions</a>.</li>
       <li>How to think about landmarks.</li>
       <li>Types of landmarks and their uses.</li>
       <li>HTML5 elements that define landmarks.</li>
     </ul>
     <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_landmark" width="98%" height="600px"></iframe>
   </contents>
 </slide>

  <slide>
    <title>Landmarks Example</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/examples/landmarks/">ARIA Authoring Practices Landmark Example</a></li>
        <li>Uses landmark in design.</li>
        <li>Landmark visualization feature.</li>
        <li>Links to related resources.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/examples/landmarks/" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 2: Design Patterns and Widgets</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_ex">ARIA Authoring Practices: Design Patterns and Widgets</a></li>
        <li>Desciption of widget.</li>
        <li>Keyboard interaction requirements and options.</li>
        <li>Uses of ARIA roles, properties and states.</li>
        <li>Examples</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#aria_ex" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Section 2.15: Menu Button</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton">ARIA Authoring Practices: Menu Button</a></li>
        <li>Desciption of example.</li>
        <li>Links to related examples.</li>
        <li>Working example.</li>
        <li>Keyboard interaction.</li>
        <li>Use of roles properties and states.</li>
        <li>Source code.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Menu Button Example</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/examples/menu-button/menu-button-1/menu-button-1.html">Menu Button Example</a></li>
        <li>Desciption of example.</li>
        <li>Links to related examples.</li>
        <li>Working example.</li>
        <li>Keyboard interaction.</li>
        <li>Use of roles properties and states.</li>
        <li>Source code.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/examples/menu-button/menu-button-1/menu-button-1.html" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4: Developing a Keyboard Inteface</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard">ARIA Authoring Practices: Developing a Keyboard Interface</a></li>
        <li>This is often the least understood part of using ARIA technology.</li>
        <li>What is the keyboard interaciotn model and which ARIA widget roles are compatible with that model.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.1: Fundamental Keyboard Navigation Conventions</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav">ARIA Authoring Practices: Fundamental Keyboard Navigation Conventions</a></li>
        <li>Keyboard interaction model for each widget role.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.2: Discernable and Predictable Keyboard Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_discernable_predictable">ARIA Authoring Practices: Discernable and Predictable Keyboard Focus</a></li>
        <li>Many users with disabilities can see the display, but need to idenfity the elements with keyboard focus and/or selections.</li>
        <li>Keyboard interaction is often difficult or impossible if users cannot identify what element has keyboard focus.</li>
        <li>Need more than just color, so the use of borders, underline or visual icons is important.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_discernable_predictable" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.3: Focus vs. Selection and the Perception of Dual Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_vs_selection">ARIA Authoring Practices: Focus vs. Selection and the Perception of Dual Focus</a></li>
        <li>Making the styling of keyboard focus and selection different is important.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_vs_selection" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.4: Deciding When to Make Selection Automatically Follow Focus</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_selection_follows_focus">ARIA Authoring Practices: Deciding When to Make Selection Automatically Follow Focus</a></li>
        <li>When content is loaded basd on user interaction there can sometimes be delays in content being available, make sure the affects of these delays are minimized for keyboard users.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_selection_follows_focus" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Section 4.5: Keyboard Navigation Between Components (The Tab Sequence)</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_between">ARIA Authoring Practices: Keyboard Navigation Between Components (The Tab Sequence)</a></li>
        <li>The use of <code>tabindex=-1</code> and <code>tabindex=0</code> to define interactive elements and tab order of content of the page.</li>
        <li><code>tabindex</code> values > 0 are discouraged, and should only be used cautiously.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_between" width="98%" height="600px"></iframe>
    </contents>
  </slide>


  <slide>
    <title>Section 4.6: Keyboard Navigation Inside Components</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_within">ARIA Authoring Practices: Keyboard Navigation Inside Components</a></li>
        <li>Roving <code>tabindex</code> versus <code>aria-activedescendant</code> technique for identifying element with current focus.</li>
        <li>Call <code>focus()</code> on elements with focus.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_general_within" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.7: Focusability of Disabled Controls</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_disabled_controls">ARIA Authoring Practices: Focusability of disabled controls</a></li>
        <li>When to keep or remove keyboard interaction to disabled controls.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_disabled_controls" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 4.8: Keyboard Shortcuts</title>
    <contents>
      <ul style="margin-bottom: 2em">
        <li><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_shortcuts">ARIA Authoring Practices: Keyboard Shortcuts</a></li>
        <li>Understanding how keyboard shortcuts augment a keyboard interface and whether to make a particular shortcut move focus, perform a function, or both.</li>
        <li>Making key assignments and avoiding assignment conflicts with assistive technologies, browsers, and operating systems.</li>
        <li>Exposing and documenting key assignments.</li>
      </ul>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_shortcuts" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>p
    <title>Section 6: Intentionally Hiding Semantics with the Presentation Role</title>
    <contents>
      <p><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#presentation_role">Section 6: Intentionally Hiding Semantics with the presentation Role </a></p>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#presentation_role" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Section 7. Roles That Automatically Hide Semantics by Making Their Descendants Presentational</title>
    <contents>
      <p><a href="https://www.w3.org/TR/wai-aria-practices-1.1/#children_presentational">Section 7. Roles That Automatically Hide Semantics by Making Their Descendants Presentational</a></p>
      <iframe src="https://www.w3.org/TR/wai-aria-practices-1.1/#children_presentational" width="98%" height="600px"></iframe>
    </contents>
  </slide>

  <slide>
    <title>Design Example: Drop Down Navigation Links</title>
    <contents>
      <ul>
        <li>Keyboard interaction dictates the ARIA roles</li>
      </ul>
    </contents>
  </slide>

  <slide>
    <title>Drop Down Navigation Links: Tab Key Operation</title>
    <style>

ul.example {
  margin: 10px;
  padding: 10px;
  font-size: 110%;
  list-style: none;
  background-color: #EEEEEE;
  height: 2.5em;
}

.popup {
  display: block;
  float: left;
  position: relative;
}

nav > ul > li > a {
  font-size: 110%;
  padding: 0.25em;
  width: 8em;
  text-decoration: none;
  color: black;
  border: 2px solid transparent;
}

nav > ul > li > a:after {
  content: url('images/down-arrow-brown.png');
  padding-left: .25em;
}

nav > ul > li > ul {
  margin: 0;
  padding: 0;
  position: absolute;
  top: 1.75em;
  font-size: 110%;
  list-style: none;
  background-color: #ccddff;
  left: -3000em;
}

nav > ul > li > ul > li {
  margin: 0;
  padding: 0;
}

nav > ul > li > ul > li > a,
nav > ul > li > ul > li > a:visited {
  display: block;
  text-decoration: none;
  padding: 0.25em;
  padding-left: 0.5em;
  padding-right: 0.5em;
  background-color: #ccddff;
  width: 10em;
  color: black;
}

/* focus and hover styling */

nav > ul > li > a:hover {
  background-color: #ccddff;
}

nav > ul > li > a:focus {
  border-color: black;
  background-color: #ccddff;
}

nav > ul > li > ul > li > a:focus {
  outline: 2px solid black;
  background-color: #ccddff;
}

    </style>
    <contents>

     <nav id="example">
        <ul class="example">
          <li class="popup">
            <a href="#">About</a>
            <ul>
              <li>
                <a href="#overview">Overview</a>
              </li>
              <li>
                <a href="#admin">Administration</a>
              </li>
              <li >
                <a href="#facts">Facts</a>
              </li>
              <li>
                <a href="#tours" >Campus Tours</a>
              </li>
            </ul>
          </li>
          <li class="popup">
            <a href="#">Admissions</a>
            <ul>
              <li>
                <a href="#apply">Apply</a>
              </li>
              <li>
                <a href="#tuition">Tuition</a>
              </li>
              <li >
                <a href="#signup">Sign Up</a>
              </li>
              <li role="separator"></li>
              <li>
                <a href="#visit">Visit</a>
              </li>
              <li>
                <a href="#photo">Photo Tour</a>
              </li>
              <li>
                <a href="#connect">Connect</a>
              </li>
            </ul>
          </li>
          <li class="popup">
            <a href="#">Academics</a>
            <ul>
              <li>
                <a href="#colleges">Colleges &amp; Schools</a>
              </li>
              <li>
                <a href="#programs">Programs of Study</a>
              </li>
              <li>
                <a href="#honors">Honors Programs</a>
              </li>
              <li>
                <a href="#online">Online Courses</a>
              </li>
              <li role="separator"></li>
              <li>
                <a href="#explorer">Course Explorer</a>
              </li>
              <li>
                <a href="#register">Register for Class</a>
              </li>
              <li>
                <a href="#academic">Academic Calendar</a>
              </li>
              <li>
                <a href="#tanscripts">Transcripts</a>
              </li>
            </ul>
          </li>
        </ul>
      </nav>

      <script>

        var i, l;

        var topLinks = document.querySelectorAll('nav > ul > li > a');

        for (i = 0; i &lt; topLinks.length; i++) {
          l = topLinks[i];

          l.addEventListener('focus', function(event) {
            var tgt = event.currentTarget;

            if (tgt.nextElementSibling) {
              tgt.nextElementSibling.style.left = "0";
            }
          });

          l.addEventListener('blur', function(event) {
            var tgt = event.currentTarget;

            if (tgt.nextElementSibling) {
              tgt.nextElementSibling.style.left = '-3000em';
            }
          });

        }

        var popupLinks = document.querySelectorAll('nav > ul > li > ul > li > a');

        for (i = 0; i &lt; popupLinks.length; i++) {
          l = popupLinks[i];

          l.addEventListener('focus', function(event) {
            var tgt = event.currentTarget;
            tgt.parentNode.parentNode.style.left = '0';
          });

          l.addEventListener('blur', function(event) {
            var tgt = event.currentTarget;
            tgt.parentNode.parentNode.style.left = '-3000em';
          });
        }


      </script>

      <h2>HTML Code</h2>
      <pre><code id="sc1"></code></pre>

      <script>
        sourceCode.add('sc1', 'example');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>


    </contents>
  </slide>

  <slide>
    <title>Drop Down Navigation Links: ARIA Menu Button Pattern</title>
    <style>

ul.example {
  margin: 10px;
  padding: 10px;
  font-size: 110%;
  list-style: none;
  background-color: #EEEEEE;
}

.menu_button {
  position: relative;
}


a[role="button"] {
  font-size: 110%;
  padding: 0.25em;
  width: 12em;
  text-decoration: none;
  color: black;
}

a[role="button"]:after {
  content: url('images/down-arrow-brown.png');
  padding-left: .25em;
}

ul[role="menu"] {
  margin: 0;
  padding: 0;
  position: absolute;
  font-size: 110%;

  list-style: none;
  background-color: #ccddff;
  display: none;
}

ul[role="menu"] li {
  margin: 0;
  padding: 0;
}

ul[role="menu"] a[role="menuitem"],
ul[role="menu"] a[role="menuitem"]:visited {
  display: block;
  text-decoration: none;
  padding: 0.25em;
  padding-left: 0.5em;
  padding-right: 0.5em;
  background-color: #ccddff;
  width: 22em;
  color: black;
}

/* focus and hover styling */

a[role="button"]:focus,
a[role="button"]:hover {
  border: 2px solid black;
  background-color: #ccddff;
}

ul[role="menu"] a[role="menuitem"]:focus,
ul[role="menu"] a[role="menuitem"]:hover{
  background-color: #ccddff;
  color: black;
}
    </style>
    <contents>

      <script src="js/Menubutton2.js" type="text/javascript"></script>
      <script src="js/MenubuttonPopupMenuLinks.js" type="text/javascript"></script>
      <script src="js/MenubuttonMenuItemLinks.js" type="text/javascript"></script>

      <nav id="example">
        <ul class="example">
          <li class="menu_button">
            <a role="button" aria-haspopup="true" aria-controls="menu1" href="#">About</a>
            <ul id="menu1" role="menu" aria-label="About">
              <li role="none">
                <a role="menuitem" href="#overview">Overview</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#admin">Administration</a>
              </li>
              <li role="none">
                <a id="menubar113" role="menuitem" href="#facts">Facts</a>
              </li>
              <li>
                <a role="menuitem" href="#tours" >Campus
                  Tours</a>
              </li>
            </ul>
          </li>
          <li class="menu_button">
            <a role="button" aria-haspopup="true" aria-controls="menu2" href="#">Admissions</a>
            <ul id="menu2" role="menu" aria-label="Admissions">
              <li role="none">
                <a role="menuitem" href="#apply">Apply</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#tuition">Tuition</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#signup">Sign Up</a>
              </li>
              <li role="separator"></li>
              <li role="none">
                <a role="menuitem" href="#visit">Visit</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#photo">Photo Tour</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#connect">Connect</a>
              </li>
            </ul>
          </li>
          <li  class="menu_button">
            <a role="button" aria-haspopup="true" aria-controls="menu3" href="#">Academics</a>
            <ul id="menu3" role="menu" aria-label="Academics">
              <li role="none">
                <a role="menuitem" href="#colleges">Colleges &amp; Schools</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#programs">Programs of Study</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#honors">Honors Programs</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#online">Online Courses</a>
              </li>
              <li role="separator"></li>
              <li role="none">
                <a role="menuitem" href="#explorer">Course Explorer</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#register">Register for Class</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#academic">Academic Calendar</a>
              </li>
              <li role="none">
                <a role="menuitem" href="#tanscripts">Transcripts</a>
              </li>
            </ul>
          </li>
        </ul>
      </nav>

      <script>
        var mbs = document.querySelectorAll('a[role="button"]');

        for (var i = 0; i &lt; mbs.length; i++) {
          console.log('TEST: ' + i);
          var mb = new Menubutton(mbs[i]);
          mb.init();
        }
      </script>


      <h2>HTML Code</h2>
      <pre><code id="sc1"></code></pre>

      <script>
        sourceCode.add('sc1', 'example');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>


    </contents>
  </slide>

  <slide>
    <title>Drop Down Navigation Links: ARIA Menubar Pattern</title>
    <style>
ul[role="menubar"] {
  margin: 10px;
  padding: 10px;
  font-size: 110%;
  list-style: none;
  background-color: #EEEEEE;
}

ul[role="menubar"] [role="menuitem"],
ul[role="menubar"] [role="separator"] {
  padding: 0.25em;
  background-color: #EEEEEE;
  border: 2px solid #EEEEEE;
}

ul[role="menubar"] [role="separator"] {
  padding-top: 0.15em;
  background-image: url('images/separator.png');
  background-position: center;
  background-repeat: repeat-x;
}

ul[role="menubar"] [role="menuitem"]:focus,
ul[role="menubar"] [role="menuitem"]:hover,
ul[role="menubar"] [role="separator"]:focus,
ul[role="menubar"] [role="separator"]:hover {
  background-color: black;
  color: white;
}

ul[role="menubar"] a[role="menuitem"] {
  text-decoration: none;
  color: black;
}

ul[role="menubar"] li {
  list-style: none;
  margin: 0;
  padding: 0;
}

ul[role="menubar"] > li {
  display: inline;
  position: relative;
}

ul[role="menubar"] > li > a:after {
  content: url('images/down-arrow-brown.png');
  padding-left: .25em;
}


ul[role="menubar"] ul[role="menu"] {
  display: none;
  position: absolute;
  top: -2px;
  left: 0;
  margin: 0;
  padding: 0;
}


ul[role="menubar"] ul[role="menu"] li a {
  display: block;
  width: 10em;
}

ul[role="menubar"] ul[role="menu"] a[aria-haspopup="true"]:after {
  content: url('images/right-arrow-brown.png');
  padding-right: 2em;
}
    </style>
    <contents>

      <script src="js/MenubarLinks.js" type="text/javascript"></script>
      <script src="js/MenubarItemLinks.js" type="text/javascript"></script>
      <script src="js/PopupMenuLinks.js" type="text/javascript"></script>
      <script src="js/PopupMenuItemLinks.js" type="text/javascript"></script>

      <nav id="example">
      <ul id="menubar1" role="menubar" aria-label="Mythical University Menu 1">
        <li>
          <a role="menuitem" aria-haspopup="true" aria-expanded="false" href="#">About</a>
          <ul role="menu" aria-label="About">
            <li role="none">
              <a role="menuitem" href="#overview">Overview</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#admin">Administration</a>
            </li>
            <li role="none">
              <a id="menubar113" role="menuitem" href="#facts">Facts</a>
            </li>
            <li>
              <a role="menuitem" href="#tours" >Campus
                Tours</a>
            </li>
          </ul>
        </li>
        <li>
          <a role="menuitem" aria-haspopup="true" aria-expanded="false" href="#">Admissions</a>
          <ul role="menu" aria-label="Admissions">
            <li role="none">
              <a role="menuitem" href="#apply">Apply</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#tuition">Tuition</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#signup">Sign Up</a>
            </li>
            <li role="separator"></li>
            <li role="none">
              <a role="menuitem" href="#visit">Visit</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#photo">Photo Tour</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#connect">Connect</a>
            </li>
          </ul>
        </li>
        <li>
          <a role="menuitem" aria-haspopup="true" aria-expanded="false" href="#">Academics</a>
          <ul role="menu" aria-label="Academics">
            <li role="none">
              <a role="menuitem" href="#colleges">Colleges &amp; Schools</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#programs">Programs of Study</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#honors">Honors Programs</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#online">Online Courses</a>
            </li>
            <li role="separator"></li>
            <li role="none">
              <a role="menuitem" href="#explorer">Course Explorer</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#register">Register for Class</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#academic">Academic Calendar</a>
            </li>
            <li role="none">
              <a role="menuitem" href="#tanscripts">Transcripts</a>
            </li>
          </ul>
        </li>
      </ul>
    </nav>

      <script type="text/javascript">
              var menubar = new Menubar(document.getElementById('menubar1'));
              menubar.init();
            </script>


      <h2>HTML Code</h2>
      <pre><code id="sc1"></code></pre>

      <script>
        sourceCode.add('sc1', 'example');
        sourceCode.make();
        hljs.initHighlightingOnLoad();
      </script>

    </contents>
  </slide>

  <slide>
    <title>Jon Gunderson's Evaluation Priorities</title>
    <contents>

      <ol>
        <li>Keyboard navigation (manual)</li>
        <li>Keyboard focus styling (manual)</li>
        <li>Landmarks (AInspector Sidebar and Accessibility Bookmarklets)</li>
        <li>Headings (AInspector Sidebar and Accessibility Bookmarklets)</li>
        <li>Form control labeling (AInspector Sidebar, Wave and aXe)</li>
        <li>Link text (AInspector Sidebar, Wave and aXe)</li>
        <li>ALT text for images (AInspector Sidebar, Wave and aXe)</li>
        <li>Table accessibility (AInspector Sidebar)</li>
        <li>Color contrast (Any tool)</li>
        <li>Use of ARIA markup (AInspector and aXe)</li>
        <li>Other WCAG 2.0 requirements</li>
      </ol>

    </contents>

  </slide>

  <slide>
    <title>Training Resources</title>
    <contents>
      <ul>
        <li><a href="https://go.illinois.edu/a11y-badges">DRES Web Accessibility Badging Program</a>:
          <ul>
            <li>Web Design: Landmarks, Heading and Page Title (October 2018)</li>
            <li>Web Design: Form Controls and Links(November 2018) </li>
            <li>Web Design: Introduction for ARIA (November 2018)</li>
            <li>Web Accessibility Evaluation: Non-technical (January 2018)</li>
            <li>Web Accessibility Evaluation: Technical (January 2018)</li>
          </ul>
        </li>
        <li><a href="http://online.ahs.illinois.edu/iadp/">AHS Information Accessibility Design and Policy (IADP) Certificate</a>
          <ul>
            <li>Three 8 week online courses</li>
          </ul>
        </li>
      </ul>
    </contents>
  </slide>


</slides>


